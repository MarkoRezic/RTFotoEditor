[{"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\index.js":"1","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\App.js":"2","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Navbar.js":"4","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\AuthorityContext.js":"5","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\View.js":"6","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Home.js":"7","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Profil.js":"8","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Editor.js":"9","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Login.js":"10","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Error403.js":"11","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Register.js":"12","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\ConfirmPanel.js":"13","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\svg icons\\BootstrapIcon.js":"14","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\UserView.js":"15","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\AdminView.js":"16","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\SuperAdminView.js":"17","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\GuestView.js":"18","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Users.js":"19","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Postavke.js":"20","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Inbox.js":"21","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Posts.js":"22","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Post.js":"23","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Profil_ID.js":"24","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\index.js":"25","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\App.js":"26","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\reportWebVitals.js":"27","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Navbar.js":"28","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\AuthorityContext.js":"29","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Home.js":"30","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Inbox.js":"31","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Profil_ID.js":"32","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Login.js":"33","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Register.js":"34","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\View.js":"35","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Profil.js":"36","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Users.js":"37","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Error403.js":"38","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Editor.js":"39","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Posts.js":"40","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Postavke.js":"41","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\ConfirmPanel.js":"42","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Post.js":"43","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\svg icons\\BootstrapIcon.js":"44","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\views\\UserView.js":"45","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\views\\SuperAdminView.js":"46","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\views\\AdminView.js":"47","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\views\\GuestView.js":"48"},{"size":435,"mtime":1607607822802,"results":"49","hashOfConfig":"50"},{"size":506,"mtime":1612133280808,"results":"51","hashOfConfig":"50"},{"size":362,"mtime":1606847084564,"results":"52","hashOfConfig":"50"},{"size":7505,"mtime":1614451110659,"results":"53","hashOfConfig":"50"},{"size":1389,"mtime":1614471852897,"results":"54","hashOfConfig":"50"},{"size":601,"mtime":1612875709005,"results":"55","hashOfConfig":"50"},{"size":8832,"mtime":1608335158106,"results":"56","hashOfConfig":"50"},{"size":6451,"mtime":1613927539013,"results":"57","hashOfConfig":"50"},{"size":120564,"mtime":1614717812781,"results":"58","hashOfConfig":"50"},{"size":6524,"mtime":1613836878609,"results":"59","hashOfConfig":"50"},{"size":1136,"mtime":1614450942552,"results":"60","hashOfConfig":"50"},{"size":13421,"mtime":1614635897152,"results":"61","hashOfConfig":"50"},{"size":1424,"mtime":1614472118504,"results":"62","hashOfConfig":"50"},{"size":62033,"mtime":1614715783102,"results":"63","hashOfConfig":"50"},{"size":1962,"mtime":1613763920189,"results":"64","hashOfConfig":"50"},{"size":2085,"mtime":1613763902162,"results":"65","hashOfConfig":"50"},{"size":2095,"mtime":1613763913614,"results":"66","hashOfConfig":"50"},{"size":766,"mtime":1613754247945,"results":"67","hashOfConfig":"50"},{"size":5562,"mtime":1614472207104,"results":"68","hashOfConfig":"50"},{"size":12981,"mtime":1613836824375,"results":"69","hashOfConfig":"50"},{"size":21469,"mtime":1614450986826,"results":"70","hashOfConfig":"50"},{"size":3226,"mtime":1614451248999,"results":"71","hashOfConfig":"50"},{"size":4332,"mtime":1614451256640,"results":"72","hashOfConfig":"50"},{"size":3988,"mtime":1614451271743,"results":"73","hashOfConfig":"50"},{"size":435,"mtime":1607607822802,"results":"74","hashOfConfig":"75"},{"size":506,"mtime":1612133280808,"results":"76","hashOfConfig":"75"},{"size":362,"mtime":1606847084564,"results":"77","hashOfConfig":"75"},{"size":7436,"mtime":1615550181841,"results":"78","hashOfConfig":"75"},{"size":1299,"mtime":1615503102842,"results":"79","hashOfConfig":"75"},{"size":9346,"mtime":1615686042243,"results":"80","hashOfConfig":"75"},{"size":19286,"mtime":1615687459970,"results":"81","hashOfConfig":"75"},{"size":4153,"mtime":1615503274577,"results":"82","hashOfConfig":"75"},{"size":6258,"mtime":1615684161949,"results":"83","hashOfConfig":"75"},{"size":13046,"mtime":1615684238845,"results":"84","hashOfConfig":"75"},{"size":601,"mtime":1612875709005,"results":"85","hashOfConfig":"75"},{"size":6573,"mtime":1615684208517,"results":"86","hashOfConfig":"75"},{"size":5584,"mtime":1615683851660,"results":"87","hashOfConfig":"75"},{"size":1105,"mtime":1615503156041,"results":"88","hashOfConfig":"75"},{"size":150680,"mtime":1615686604380,"results":"89","hashOfConfig":"75"},{"size":4583,"mtime":1615325340353,"results":"90","hashOfConfig":"75"},{"size":12980,"mtime":1615684197101,"results":"91","hashOfConfig":"75"},{"size":1374,"mtime":1614784367605,"results":"92","hashOfConfig":"75"},{"size":18987,"mtime":1615684184588,"results":"93","hashOfConfig":"75"},{"size":73870,"mtime":1615683750885,"results":"94","hashOfConfig":"75"},{"size":1870,"mtime":1614809387136,"results":"95","hashOfConfig":"75"},{"size":2003,"mtime":1614809388391,"results":"96","hashOfConfig":"75"},{"size":1993,"mtime":1614809390344,"results":"97","hashOfConfig":"75"},{"size":766,"mtime":1613754247945,"results":"98","hashOfConfig":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"1vovu6",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"1phjiod",{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"150"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"150"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\index.js",[],["199","200"],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\App.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\AuthorityContext.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\View.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Home.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Profil.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Editor.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Login.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Error403.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Register.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\ConfirmPanel.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\svg icons\\BootstrapIcon.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\UserView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\AdminView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\SuperAdminView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\GuestView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Users.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Postavke.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Inbox.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Posts.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Post.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Profil_ID.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\index.js",[],["201","202"],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\App.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\AuthorityContext.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Home.js",["203"],"import RTLogo from '../images/RT_logo_HD_Sharp_Transparent_Full.png';\r\nimport HTML5 from '../images/HTML5_logo.png';\r\nimport CSS3 from '../images/CSS3_logo.png';\r\nimport JAVAS from '../images/javascript_logo.png';\r\nimport SQL from '../images/sql_logo.png';\r\nimport NODE from '../images/node_logo.png';\r\nimport ATOM from '../images/atom_logo.png';\r\nimport BOOTSTRAP from '../images/bootstrap_logo.png';\r\nimport REACT from '../images/React_logo.png';\r\nimport MYSQL from '../images/mysql_logo.png';\r\nimport EXPRESS from '../images/ExpressJS_logo.png';\r\nimport AUTORI from '../images/Autori.jpeg';\r\nimport GITHUB from '../images/GitHub.png';\r\nimport GITHUBLOGO from '../images/GitHubLogo.png';\r\nimport BootstrapIcon from '../svg icons/BootstrapIcon.js';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"blog-header\">\r\n                <div className=\"container btrans\">\r\n                    <h1 className=\"text-center\"><img alt=\"\" src={RTLogo} className=\"logo\" /><strong> Projekt Foto Editor</strong></h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-sm-12 blog-main\">\r\n\r\n                        <div className=\"blog-post\">\r\n                            <hr className=\"round\" />\r\n                            <h2 className=\"blog-post-title\">O projektu</h2>\r\n                            <p className=\"blog-post-meta\">Zadnje ažurirano 10. studenog 2020.</p>\r\n\r\n                            <p><strong><em>Foto Editor</em></strong> je projekt koji obuhvaća potpuno funkcionalni sustav za prijenos, pohranu i uređivanje slika putem web aplikacije.</p>\r\n                            <hr />\r\n                            <p>Sustav će se sastojati od same web aplikacije za uređivanje, sučelja za administratore, korisnike i goste web stranice, te baze podataka.</p>\r\n\r\n                            <p>Web aplikacija će omogućavati korisniku uređivanje slika pomoću sljedećih modifikacija:</p>\r\n                            <ul>\r\n\r\n                                <li><BootstrapIcon type={9} /> Crop</li>\r\n\r\n                                <li><BootstrapIcon type={10} /> Resize</li>\r\n\r\n                                <li><BootstrapIcon type={11} /> Contrast</li>\r\n\r\n                                <li><BootstrapIcon type={12} /> Gama</li>\r\n\r\n                                <li><BootstrapIcon type={13} /> Filter</li>\r\n\r\n                                <li><BootstrapIcon type={14} /> Brightness</li>\r\n\r\n                                <li><BootstrapIcon type={15} /> Saturation</li>\r\n                            </ul>\r\n                            <hr className=\"round\" />\r\n                            <h2 className=\"w\">Motivacija</h2>\r\n                            <p>Zanimanje za grafička sučelja i manipulaciju datotekama i medijskim zapisima putem JavaScript jezika.</p>\r\n                            <hr className=\"round\" />\r\n                            <h2 className=\"w\">Tehnologije</h2>\r\n                            <hr className=\"round\" />\r\n                            <div className=\"row justify-content-around\">\r\n\r\n                                <div className=\"col teh html\">\r\n                                    <img alt=\"\" src={HTML5} className=\"tehimg\" />\r\n                                    <a href=\"https://html.spec.whatwg.org/multipage/\" className=\"text-center\" id=\"html\" target=\"_blank\" rel=\"noreferrer\">HTML5</a>\r\n                                </div>\r\n\r\n                                <div className=\"col teh css3\">\r\n                                    <img alt=\"\" src={CSS3} className=\"tehimg\" />\r\n                                    <a href=\"https://www.w3.org/Style/CSS/\" className=\"text-center\" id=\"css3\" target=\"_blank\" rel=\"noreferrer\">CSS3</a>\r\n                                </div>\r\n\r\n                                <div className=\"col teh javascript\">\r\n                                    <img alt=\"\" src={JAVAS} className=\"tehimg\" />\r\n                                    <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\" className=\"text-center\" id=\"javascript\" target=\"_blank\" rel=\"noreferrer\">JavaScript</a>\r\n                                </div>\r\n\r\n                                <div className=\"col teh sql\">\r\n                                    <img alt=\"\" src={SQL} className=\"tehimg\" />\r\n                                    <a href=\"https://www.iso.org/standard/63555.html\" className=\"text-center\" id=\"sql\" target=\"_blank\" rel=\"noreferrer\">SQL</a>\r\n                                </div>\r\n\r\n                                <div className=\"col teh node\">\r\n                                    <img alt=\"\" src={NODE} className=\"tehimg\" />\r\n                                    <a href=\"https://nodejs.org/en/about/\" className=\"text-center\" id=\"node\" target=\"_blank\" rel=\"noreferrer\">NodeJS</a>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"row justify-content-around\">\r\n\r\n                                <div className=\"col teh atom\">\r\n                                    <img alt=\"\" src={ATOM} className=\"tehimg\" />\r\n                                    <a href=\"https://atom.io/docs\" className=\"text-center\" id=\"atom\" target=\"_blank\" rel=\"noreferrer\">Atom</a>\r\n                                </div>\r\n\r\n                                <div className=\"col teh boot\">\r\n                                    <img alt=\"\" src={BOOTSTRAP} className=\"tehimg\" />\r\n                                    <a href=\"https://getbootstrap.com/\" className=\"text-center\" id=\"boot\" target=\"_blank\" rel=\"noreferrer\">Bootstrap</a>\r\n                                </div>\r\n\r\n                                <div className=\"col teh react\">\r\n                                    <img alt=\"\" src={REACT} className=\"tehimg\" />\r\n                                    <a href=\"https://reactjs.org/\" className=\"text-center\" id=\"react\" target=\"_blank\" rel=\"noreferrer\">React</a>\r\n                                </div>\r\n\r\n                                <div className=\"col teh mysql\">\r\n                                    <img alt=\"\" src={MYSQL} className=\"tehimg\" />\r\n                                    <a href=\"https://www.mysql.com/\" className=\"text-center\" id=\"mysql\" target=\"_blank\" rel=\"noreferrer\">MySQL</a>\r\n                                </div>\r\n\r\n                                <div className=\"col teh exp\">\r\n                                    <img alt=\"\" src={EXPRESS} className=\"tehimg expimg\" />\r\n                                    <a href=\"https://expressjs.com/\" className=\"text-center\" id=\"exp\" target=\"_blank\" rel=\"noreferrer\">ExpressJS</a>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <p id=\"framew\" className=\"text-center\">Frameworks</p>\r\n                            <hr className=\"round\" />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"blog-post\">\r\n                            <h2 className=\"blog-post-title\">Autori</h2>\r\n                            <p className=\"blog-post-meta\">Marko Rezić, Toni Jelonjić</p>\r\n                            <hr className=\"round\" />\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-6\" id=\"toni\">\r\n                                    <h4 className=\"w\">Toni Jelonjić</h4>\r\n                                    <p>Student 3. godine Fakulteta Strojarstva, Računarstva i Elektrotehnike u Mostaru. <br /><br />Rođen 2.8.1999.</p>\r\n                                </div>\r\n                                <div className=\"col-6\" id=\"marko\">\r\n                                    <h4 className=\"w\">Marko Rezić</h4>\r\n                                    <p>Student 3. godine Fakulteta Strojarstva, Računarstva i Elektrotehnike u Mostaru. <br /><br />Rođen 25.9.1999.</p>\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"round\" />\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <img alt=\"\" src={AUTORI} className=\"autori\" />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"blog-post\">\r\n                            <h5 className=\"w\">Link Vizije</h5>\r\n                            <p className=\"blog-post-meta\">Zadnje ažurirano 8. studenog 2020. <strong> <a className=\"alink\" href=\"https://docs.google.com/document/d/141DHijMdyPfeffnDDo_hYwJRKfGQT5NC6UDfMsEDl3Y/edit?usp=sharing\" target=\"_blank\" rel=\"noreferrer\">Vizija</a> </strong></p>\r\n                            <a href=\"https://github.com/MarkoRezic/RTFotoEditor\" target=\"_blank\">\r\n                                <span className=\"githubContainer\">\r\n                                    <img alt='' src={GITHUB} className=\"github\" />\r\n                                    <img alt='' src={GITHUBLOGO} className=\"githubLogo\" />\r\n                                </span>\r\n                            </a>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Inbox.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Profil_ID.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Login.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Register.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\View.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Profil.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Users.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Error403.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Editor.js",["204","205"],"import { Form } from 'react-bootstrap';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Axios from 'axios';\r\nimport { AuthorityContext } from './AuthorityContext';\r\nimport { checkText } from 'smile2emoji';\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport BootstrapIcon from '../svg icons/BootstrapIcon';\r\nimport { SliderPicker } from 'react-color';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport TEMPLATE from '../images/presetFilters/presetTemplate.jpg';\r\nimport VINTAGE from '../images/presetFilters/VINTAGE.jpg';\r\nimport LOMO from '../images/presetFilters/LOMO.jpg';\r\nimport THEA from '../images/presetFilters/THEA.jpg';\r\nimport CLARITY from '../images/presetFilters/CLARITY.jpg';\r\nimport SINCITY from '../images/presetFilters/SINCITY.jpg';\r\nimport SUNRISE from '../images/presetFilters/SUNRISE.jpg';\r\nimport CROSSPROCESS from '../images/presetFilters/CROSSPROCESS.jpg';\r\nimport ORANGEPEEL from '../images/presetFilters/ORANGEPEEL.jpg';\r\nimport LOVE from '../images/presetFilters/LOVE.jpg';\r\nimport GRUNGY from '../images/presetFilters/GRUNGY.jpg';\r\nimport JARQUES from '../images/presetFilters/JARQUES.jpg';\r\nimport PINHOLE from '../images/presetFilters/PINHOLE.jpg';\r\nimport OLDBOOT from '../images/presetFilters/OLDBOOT.jpg';\r\nimport GLOWINGSUN from '../images/presetFilters/GLOWINGSUN.jpg';\r\nimport HAZYDAYS from '../images/presetFilters/HAZYDAYS.jpg';\r\nimport HERMAJESTY from '../images/presetFilters/HERMAJESTY.jpg';\r\nimport NOSTALGIA from '../images/presetFilters/NOSTALGIA.jpg';\r\nimport HEMINGWAY from '../images/presetFilters/HEMINGWAY.jpg';\r\nimport CONCENTRATE from '../images/presetFilters/CONCENTRATE.jpg';\r\nimport GITHUB from '../images/GitHub.png';\r\nimport GITHUBLOGO from '../images/GitHubLogo.png';\r\nimport CAMANJS from '../images/camanjs.png';\r\nimport CAMERA from '../images/Camera.png';\r\n\r\nconst Editor = (props) => {\r\n    /* eslint-disable */\r\n    const [userList, setUserList, currentUser, setCurrentUser, url] = useContext(AuthorityContext);\r\n    Axios.defaults.withCredentials = true;\r\n    const [fileInputState, setFileInputState] = useState('');\r\n    const [previewSource, setPreviewSource] = useState('');\r\n    const [isRendering, setIsRendering] = useState(false);\r\n    const [currentRotate, setCurrentRotate] = useState(0);\r\n    const [currentWidth, setCurrentWidth] = useState(100);\r\n    const [currentHeight, setCurrentHeight] = useState(100);\r\n    const [isResettingCrop, setIsResettingCrop] = useState(true);\r\n    const [currentCrop, setCurrentCrop] = useState({\r\n        unit: '%',\r\n        x: 0,\r\n        y: 0,\r\n        width: 100,\r\n        height: 100,\r\n    })\r\n    const cropReset = {\r\n        unit: '%',\r\n        x: 0,\r\n        y: 0,\r\n        width: 100,\r\n        height: 100,\r\n    }\r\n    const [description, setDescription] = useState('');\r\n    const [postView, setPostView] = useState('Public');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [activeTransformContainer, setActiveTransformContainer] = useState(-1);\r\n    const [activeFilterContainer, setActiveFilterContainer] = useState(-1);\r\n    const [currentPreset, setCurrentPreset] = useState('');\r\n    const [previousPreset, setPreviousPreset] = useState('initial');\r\n    const [currentColor, setCurrentColor] = useState('#B3DEE5');\r\n    const [endColor, setEndColor] = useState('#B3DEE5');\r\n    const [currentVignetteSize, setCurrentVignetteSize] = useState(0);\r\n    const [currentVignetteStrength, setCurrentVignetteStrength] = useState(0);\r\n    const [isPNG, setIsPNG] = useState(false);\r\n    const [imageQuality, setImageQuality] = useState(0.8);\r\n    const [maxSize, setMaxSize] = useState(500);\r\n    const [expand, setExpand] = useState(false);\r\n    const [resizeClass, setResizeClass] = useState('');\r\n    const [resizeClassCropped, setResizeClassCropped] = useState('');\r\n    const [postOriginal, setPostOriginal] = useState(false);\r\n    const [renderPaused, setRenderPaused] = useState(false);\r\n    const [fileName, setFileName] = useState(\"\");\r\n    const [values, setValues] = useState({\r\n        brightness: 0,          //-100 .. 100\r\n        contrast: 0,            //-100 .. 100\r\n        exposure: 0,            //-100 .. 100\r\n        stackBlur: 0,           //   0 .. 20\r\n\r\n        saturation: 0,          //-100 .. 100\r\n        vibrance: 0,            //-100 .. 100\r\n        hue: 0,                 //   0 .. 100\r\n        clip: 0,                //   0 .. 100\r\n\r\n        channelR: 0,            //-100 .. 100 \r\n        channelG: 0,            //-100 .. 100 \r\n        channelB: 0,            //-100 .. 100 \r\n        greyscale: false,       //true .. false\r\n\r\n        colorizeStrength: 0,    //   0 .. 100\r\n\r\n        gamma: 1,               //   0 .1. 5\r\n        presetFilter: '',\r\n\r\n        mirrorX: 0,             //   0 .. 1\r\n        mirrorY: 0,             //   0 .. 1\r\n\r\n        resizeWidth: 100,       //   1 .. 100%\r\n        resizeHeight: 100,      //   1 .. 100%\r\n\r\n        rotateAngle: 0,         //   0 .. 360\r\n\r\n        opacity: 1,             //   0 .. 1\r\n\r\n        vignetteSize: 0,        //   0 .. 100%\r\n        vignetteStrength: 0,    //   0 .. 100\r\n        sepia: 0,               //   0 .. 100\r\n        noise: 0,               //   0 .. 100\r\n        invert: false,          //true .. false\r\n        dither: false,          //true .. false\r\n        ditherAlgo: 0,          //   0 .. 7\r\n        sharpen: 0,             //   0 .. 120\r\n        radialBlur: 0,          //   0 .. 8\r\n        motionBlurAngle: 45,    //   0 .. 360\r\n        motionBlurLayers: 0,    //   0 .. 6\r\n    });\r\n    const resetValues = {\r\n        brightness: 0,          //-100 .. 100\r\n        contrast: 0,            //-100 .. 100\r\n        exposure: 0,            //-100 .. 100\r\n        stackBlur: 0,           //   0 .. 20\r\n\r\n        saturation: 0,          //-100 .. 100\r\n        vibrance: 0,            //-100 .. 100\r\n        hue: 0,                 //   0 .. 100\r\n        clip: 0,                //   0 .. 100\r\n\r\n        channelR: 0,            //-100 .. 100 \r\n        channelG: 0,            //-100 .. 100 \r\n        channelB: 0,            //-100 .. 100 \r\n        greyscale: false,       //true .. false\r\n\r\n        colorizeStrength: 0,    //   0 .. 100\r\n\r\n        gamma: 1,               //   0 .1. 5\r\n        presetFilter: '',\r\n\r\n        mirrorX: 0,             //   0 .. 1\r\n        mirrorY: 0,             //   0 .. 1\r\n\r\n        resizeWidth: 100,       //   1 .. 100%\r\n        resizeHeight: 100,      //   1 .. 100%\r\n\r\n        rotateAngle: 0,         //   0 .. 360\r\n\r\n        opacity: 1,             //   0 .. 1\r\n\r\n        vignetteSize: 0,        //   0 .. 100%\r\n        vignetteStrength: 0,    //   0 .. 100\r\n        sepia: 0,               //   0 .. 100\r\n        noise: 0,               //   0 .. 100\r\n        invert: false,          //true .. false\r\n        dither: false,          //true .. false\r\n        ditherAlgo: 0,          //   0 .. 7\r\n        sharpen: 0,             //   0 .. 120\r\n        radialBlur: 0,          //   0 .. 8\r\n        motionBlurAngle: 45,    //   0 .. 360\r\n        motionBlurLayers: 0,    //   0 .. 6\r\n    };\r\n    const [userVerified, setUserVerified] = useState(false);\r\n    const [commandStack, setCommandStack] = useState([]);\r\n    const [redoStack, setRedoStack] = useState([]);\r\n    const [isUndoActive, setIsUndoActive] = useState(false);\r\n    const MAX_COMMAND_STACK = 30;\r\n    const commandCodes = ['fi', 'br', 'co', 'ex', 'ga', 'op', 'sa', 'vi', 'hu', 'in', 'se', 'cl', 're', 'gr', 'bl', 'gy', 'hex', 'coS', 'no', 'sh', 'blr', 'rblr', 'di', 'diA', 'mblr', 'mblrA', 'vin', 'vinS', 'cr', 'ro', 'aw', 'ah', 'mx', 'my'];\r\n    var canvas, canvasCopy, presetCopy;\r\n    var ctxPreset, ctxCopy;\r\n\r\n    var img = new Image();\r\n    const ditherAlgorithms = [\r\n        \"floyd-steinberg\",\r\n        \"jarvis-judice-ninke\",\r\n        \"stucki\",\r\n        \"atkinson\",\r\n        \"burkes\",\r\n        \"sierra\",\r\n        \"two-row-sierra\",\r\n        \"sierra-lite\"\r\n    ];\r\n    let mounted = false;\r\n\r\n    useEffect(() => {\r\n        mounted = true;\r\n        canvas = document.getElementById(\"canvas\");\r\n        presetCopy = document.getElementById(\"presetCopy\");\r\n        canvasCopy = document.getElementById(\"canvasCopy\");\r\n        ctxPreset = presetCopy.getContext(\"2d\");\r\n        ctxCopy = canvasCopy.getContext(\"2d\");\r\n        img = new Image();\r\n        setFileName(\"\");\r\n        window.addEventListener('resize', resizeClassCalculate);\r\n        //Creating crop plugin\r\n        window.Caman.Plugin.register(\"cloneCanvas\", function (canvasCopy, newID) {\r\n            var canvas, ctx;\r\n            canvas = document.createElement('canvas');\r\n            cloneAttributes(canvasCopy, canvas);\r\n            if (canvas) {\r\n                canvas.removeAttribute(\"data-caman-id\");\r\n                canvas.setAttribute('id', newID);\r\n            }\r\n            canvas.width = canvasCopy.width;\r\n            canvas.height = canvasCopy.height;\r\n            ctx = canvas.getContext('2d');\r\n            ctx.drawImage(canvasCopy, 0, 0, canvasCopy.width, canvasCopy.height, 0, 0, canvasCopy.width, canvasCopy.height);\r\n            return this.replaceCanvas(canvas);\r\n        });\r\n\r\n        window.Caman.Plugin.register(\"mirror\", function (x, y) {\r\n            if (x !== 1 && y !== 1) return;\r\n            var canvas, ctx;\r\n            canvas = document.createElement('canvas');\r\n            cloneAttributes(this.canvas, canvas);\r\n            if (canvas) canvas.removeAttribute(\"data-caman-id\");\r\n            canvas.width = this.canvas.width;\r\n            canvas.height = this.canvas.height;\r\n            ctx = canvas.getContext('2d');\r\n            if (x === 1 && y === 1) {\r\n                ctx.scale(-1, -1);\r\n                ctx.drawImage(this.canvas, 0, 0, -this.canvas.width, -this.canvas.height);\r\n            }\r\n            else if (x === 1) {\r\n                ctx.scale(-1, 1);\r\n                ctx.drawImage(this.canvas, 0, 0, -this.canvas.width, this.canvas.height);\r\n            }\r\n            else {\r\n                ctx.scale(1, -1);\r\n                ctx.drawImage(this.canvas, 0, 0, this.canvas.width, -this.canvas.height);\r\n            }\r\n            return this.replaceCanvas(canvas);\r\n        });\r\n\r\n        window.Caman.Plugin.register(\"crop\", function (width, height, x, y) {\r\n            width /= 100;\r\n            height /= 100;\r\n            x /= 100;\r\n            y /= 100;\r\n            var canvas, ctx;\r\n            if (x == null) {\r\n                x = 0;\r\n            }\r\n            if (y == null) {\r\n                y = 0;\r\n            }\r\n            canvas = document.createElement('canvas');\r\n            cloneAttributes(this.canvas, canvas);\r\n            if (canvas) canvas.removeAttribute(\"data-caman-id\");\r\n            canvas.width = width * this.canvas.width;\r\n            canvas.height = height * this.canvas.height;\r\n            ctx = canvas.getContext('2d');\r\n            ctx.drawImage(this.canvas, x * this.canvas.width, y * this.canvas.height, width * this.canvas.width, height * this.canvas.height, 0, 0, width * this.canvas.width, height * this.canvas.height);\r\n            this.cropCoordinates = {\r\n                x: x,\r\n                y: y\r\n            };\r\n            this.cropped = true;\r\n            return this.replaceCanvas(canvas);\r\n        });\r\n\r\n        window.Caman.Plugin.register(\"resizePercent\", function (newDims) {\r\n            var canvas, ctx;\r\n            if (newDims == null) {\r\n                newDims = null;\r\n            }\r\n            if (newDims === null || ((newDims.width == null) && (newDims.height == null))) {\r\n                console.error(\"Invalid or missing dimensions given for resize\");\r\n                return;\r\n            }\r\n            if (newDims.width == null) {\r\n                newDims.height /= 100;\r\n                newDims.width = newDims.height;\r\n            } else if (newDims.height == null) {\r\n                newDims.width /= 100;\r\n                newDims.height = newDims.width;\r\n            }\r\n            else {\r\n                newDims.width /= 100;\r\n                newDims.height /= 100;\r\n            }\r\n            canvas = document.createElement('canvas');\r\n            cloneAttributes(this.canvas, canvas);\r\n            if (canvas) canvas.removeAttribute(\"data-caman-id\");\r\n            canvas.width = newDims.width * this.canvas.width;\r\n            canvas.height = newDims.height * this.canvas.height;\r\n            ctx = canvas.getContext('2d');\r\n            ctx.drawImage(this.canvas, 0, 0, this.canvas.width, this.canvas.height, 0, 0, newDims.width * this.canvas.width, newDims.height * this.canvas.height);\r\n            this.resized = true;\r\n            return this.replaceCanvas(canvas);\r\n        });\r\n\r\n        window.Caman.Plugin.register(\"resize\", function (newDims) {\r\n            var canvas, ctx;\r\n            if (newDims == null) {\r\n                newDims = null;\r\n            }\r\n            if (newDims === null || ((newDims.width == null) && (newDims.height == null))) {\r\n                console.error(\"Invalid or missing dimensions given for resize\");\r\n                return;\r\n            }\r\n            if (newDims.width === 0 || newDims.height === 0) return;\r\n            if (newDims.width == null) {\r\n                newDims.width = this.canvas.width * newDims.height / this.canvas.height;\r\n            } else if (newDims.height == null) {\r\n                newDims.height = this.canvas.height * newDims.width / this.canvas.width;\r\n            }\r\n            canvas = document.createElement('canvas');\r\n            cloneAttributes(this.canvas, canvas);\r\n            if (canvas) canvas.removeAttribute(\"data-caman-id\");\r\n            canvas.width = newDims.width;\r\n            canvas.height = newDims.height;\r\n            ctx = canvas.getContext('2d');\r\n            ctx.drawImage(this.canvas, 0, 0, this.canvas.width, this.canvas.height, 0, 0, newDims.width, newDims.height);\r\n            this.resized = true;\r\n            return this.replaceCanvas(canvas);\r\n        });\r\n\r\n        window.Caman.Plugin.register(\"rotate\", function (degrees) {\r\n            var angle, canvas, ctx, height, to_radians, width;\r\n            angle = degrees % 360;\r\n            if (angle === 0) {\r\n                return this.dimensions = {\r\n                    width: this.canvas.width,\r\n                    height: this.canvas.height\r\n                };\r\n            }\r\n            to_radians = Math.PI / 180;\r\n            canvas = document.createElement('canvas');\r\n            cloneAttributes(this.canvas, canvas);\r\n            width = this.canvas.width;\r\n            height = this.canvas.height;\r\n            if (angle === 90 || angle === -90 || angle === 270 || angle === -270) {\r\n                canvas.width = height;\r\n                canvas.height = width;\r\n            }\r\n            else if (angle === 180 || angle === -180) {\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n            }\r\n            else {\r\n                canvas.width = width > height ? width : height;\r\n                canvas.height = width > height ? width : height;\r\n            }\r\n            ctx = canvas.getContext('2d');\r\n            //ctx.save();\r\n            if (angle === 90 || angle === -90 || angle === 270 || angle === -270) {\r\n                ctx.translate(height / 2, width / 2);\r\n            }\r\n            else if (angle === 180 || angle === -180) {\r\n                ctx.translate(width / 2, height / 2);\r\n            }\r\n            else {\r\n                if (width > height) ctx.translate(width / 2, width / 2);\r\n                else ctx.translate(height / 2, height / 2);\r\n            }\r\n            ctx.rotate(angle * to_radians);\r\n            ctx.translate(-width / 2, -height / 2);\r\n            ctx.drawImage(this.canvas, 0, 0, width, height);\r\n            //ctx.restore();\r\n\r\n\r\n            return this.replaceCanvas(canvas);\r\n        });\r\n\r\n        window.Caman.Plugin.register(\"opacity\", function (opacity) {\r\n            if (opacity === null || opacity > 1 || opacity < 0) return;\r\n            var canvas, ctx;\r\n            canvas = document.createElement('canvas');\r\n            cloneAttributes(this.canvas, canvas);\r\n            if (canvas) canvas.removeAttribute(\"data-caman-id\");\r\n            canvas.width = this.canvas.width;\r\n            canvas.height = this.canvas.height;\r\n            ctx = canvas.getContext('2d');\r\n            ctx.globalAlpha = opacity;\r\n            ctx.drawImage(this.canvas, 0, 0, this.canvas.width, this.canvas.height);\r\n            return this.replaceCanvas(canvas);\r\n        });\r\n\r\n        window.Caman.Plugin.register(\"dither\", function (algo) {\r\n            var algos, b, clampedVal, curAlgo, error, errorX, errorY, g, height, i, ind, isBlack, j, luminance, matrixWidthAdj, newVal, output, pixels, r, value, width, x, y, _i, _j, _k, _l, _m, _n, _o, _p, _ref, _ref1;\r\n            pixels = this.pixelData;\r\n            width = this.dimensions.width;\r\n            height = this.dimensions.height;\r\n            output = (function () {\r\n                var _i, _results;\r\n                _results = [];\r\n                for (i = _i = 0; 0 <= width ? _i < width : _i > width; i = 0 <= width ? ++_i : --_i) {\r\n                    _results.push((function () {\r\n                        var _j, _results1;\r\n                        _results1 = [];\r\n                        for (j = _j = 0; 0 <= height ? _j < height : _j > height; j = 0 <= height ? ++_j : --_j) {\r\n                            _results1.push(0);\r\n                        }\r\n                        return _results1;\r\n                    })());\r\n                }\r\n                return _results;\r\n            })();\r\n            algos = {\r\n                \"floyd-steinberg\": {\r\n                    matrix: [[0, 0, 7], [3, 5, 1]],\r\n                    divisor: 16\r\n                },\r\n                \"jarvis-judice-ninke\": {\r\n                    matrix: [[0, 0, 0, 7, 5], [3, 5, 7, 5, 3], [1, 3, 5, 3, 1]],\r\n                    divisor: 48\r\n                },\r\n                \"stucki\": {\r\n                    matrix: [[0, 0, 0, 8, 4], [2, 4, 8, 4, 2], [1, 2, 4, 2, 1]],\r\n                    divisor: 42\r\n                },\r\n                \"atkinson\": {\r\n                    matrix: [[0, 0, 0, 1, 1], [0, 1, 1, 1, 0], [0, 0, 1, 0, 0]],\r\n                    divisor: 8\r\n                },\r\n                \"burkes\": {\r\n                    matrix: [[0, 0, 0, 8, 4], [2, 4, 8, 4, 2]],\r\n                    divisor: 32\r\n                },\r\n                \"sierra\": {\r\n                    matrix: [[0, 0, 0, 5, 3], [2, 4, 5, 4, 2], [0, 2, 3, 2, 0]],\r\n                    divisor: 32\r\n                },\r\n                \"two-row-sierra\": {\r\n                    matrix: [[0, 0, 0, 4, 3], [1, 2, 3, 2, 1]],\r\n                    divisor: 16\r\n                },\r\n                \"sierra-lite\": {\r\n                    matrix: [[0, 0, 2], [1, 1, 0]],\r\n                    divisor: 4\r\n                }\r\n            };\r\n            curAlgo = algos[algo];\r\n            matrixWidthAdj = Math.floor(curAlgo.matrix[0].length / 2);\r\n            ind = (function (_this) {\r\n                return function (x, y) {\r\n                    return (y * width + x) * 4;\r\n                };\r\n            })(this);\r\n            for (y = _i = 0; 0 <= height ? _i < height : _i > height; y = 0 <= height ? ++_i : --_i) {\r\n                for (x = _j = 0; 0 <= width ? _j < width : _j > width; x = 0 <= width ? ++_j : --_j) {\r\n                    r = pixels[ind(x, y)];\r\n                    g = pixels[ind(x, y) + 1];\r\n                    b = pixels[ind(x, y) + 2];\r\n                    luminance = (0.2126 * r) + (0.7152 * g) + (0.0722 * b);\r\n                    output[x][y] = luminance;\r\n                }\r\n            }\r\n            for (y = _k = 0; 0 <= height ? _k < height : _k > height; y = 0 <= height ? ++_k : --_k) {\r\n                for (x = _l = 0; 0 <= width ? _l < width : _l > width; x = 0 <= width ? ++_l : --_l) {\r\n                    newVal = output[x][y] > 128 ? 255 : 0;\r\n                    clampedVal = Math.max(0, Math.min(output[x][y], 255));\r\n                    error = (clampedVal - newVal) / curAlgo.divisor;\r\n                    output[x][y] = newVal;\r\n                    for (i = _m = 0, _ref = curAlgo.matrix.length; 0 <= _ref ? _m < _ref : _m > _ref; i = 0 <= _ref ? ++_m : --_m) {\r\n                        for (j = _n = 0, _ref1 = curAlgo.matrix[i].length; 0 <= _ref1 ? _n < _ref1 : _n > _ref1; j = 0 <= _ref1 ? ++_n : --_n) {\r\n                            errorX = x + j - matrixWidthAdj;\r\n                            errorY = y + i;\r\n                            if (!(errorX < 0 || errorX >= width || errorY >= height)) {\r\n                                output[errorX][errorY] += error * curAlgo.matrix[i][j];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (y = _o = 0; 0 <= height ? _o < height : _o > height; y = 0 <= height ? ++_o : --_o) {\r\n                for (x = _p = 0; 0 <= width ? _p < width : _p > width; x = 0 <= width ? ++_p : --_p) {\r\n                    isBlack = output[x][y] < 128;\r\n                    value = isBlack ? 0 : 255;\r\n                    pixels[ind(x, y)] = value;\r\n                    pixels[ind(x, y) + 1] = value;\r\n                    pixels[ind(x, y) + 2] = value;\r\n                }\r\n            }\r\n            return this;\r\n        });\r\n\r\n        window.Caman.Filter.register(\"cloneCanvas\", function () {\r\n            return this.processPlugin(\"cloneCanvas\", Array.prototype.slice.call(arguments, 0));\r\n        });\r\n\r\n        window.Caman.Filter.register(\"mirror\", function () {\r\n            return this.processPlugin(\"mirror\", Array.prototype.slice.call(arguments, 0));\r\n        });\r\n\r\n        window.Caman.Filter.register(\"crop\", function () {\r\n            return this.processPlugin(\"crop\", Array.prototype.slice.call(arguments, 0));\r\n        });\r\n\r\n        window.Caman.Filter.register(\"resizePercent\", function () {\r\n            return this.processPlugin(\"resizePercent\", Array.prototype.slice.call(arguments, 0));\r\n        });\r\n\r\n        window.Caman.Filter.register(\"resize\", function () {\r\n            return this.processPlugin(\"resize\", Array.prototype.slice.call(arguments, 0));\r\n        });\r\n\r\n        window.Caman.Filter.register(\"rotate\", function () {\r\n            return this.processPlugin(\"rotate\", Array.prototype.slice.call(arguments, 0));\r\n        });\r\n\r\n        window.Caman.Filter.register(\"opacity\", function () {\r\n            return this.processPlugin(\"opacity\", Array.prototype.slice.call(arguments, 0));\r\n        });\r\n\r\n        window.Caman.Filter.register(\"compoundMotionBlur\", function (layers, degrees) {\r\n            if (layers === null || layers < 1) return;\r\n            for (var i = 0; i < layers; i++) {\r\n                this.motionBlur(degrees);\r\n            }\r\n        });\r\n\r\n        window.Caman.Filter.register(\"compoundRadialBlur\", function (layers) {\r\n            if (layers === null || layers < 1) return;\r\n            for (var i = 0; i < layers; i++) {\r\n                this.radialBlur();\r\n            }\r\n        });\r\n\r\n        window.Caman.Filter.register(\"thea\", function () {\r\n            this.channels({ red: 0, green: 0, blue: 15 })\r\n                .vibrance(50)\r\n                .sepia(10)\r\n                .contrast(5)\r\n                .vignette(\"61%\", 30);\r\n        });\r\n\r\n        window.Caman.Filter.register(\"motionBlur\", function (degrees) {\r\n            var kernel;\r\n            degrees %= 360;\r\n            if (degrees === 0 || degrees === 180) {\r\n                kernel = [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0];\r\n            } else if ((degrees > 0 && degrees < 90) || (degrees > 180 && degrees < 270)) {\r\n                kernel = [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0];\r\n            } else if (degrees === 90 || degrees === 270) {\r\n                kernel = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n            } else {\r\n                kernel = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\r\n            }\r\n            return this.processKernel(\"Motion Blur\", kernel);\r\n        });\r\n\r\n        window.Caman.Filter.register(\"sharpen\", function (amt) {\r\n            if (amt == null) {\r\n                amt = 100;\r\n            }\r\n            amt /= 100;\r\n            return this.processKernel(\"Sharpen\", [0, -amt, 0, -amt, 4 * amt + 1, -amt, 0, -amt, 0]);\r\n        });\r\n\r\n        window.Caman.Filter.register(\"dither\", function (algo) {\r\n            if (algo == null) {\r\n                algo = \"floyd-steinberg\";\r\n            }\r\n            return this.processPlugin(\"dither\", [algo]);\r\n        });\r\n\r\n        window.Caman.Filter.register(\"dither\", function (algo) {\r\n            if (algo == null) {\r\n                algo = \"floyd-steinberg\";\r\n            }\r\n            return this.processPlugin(\"dither\", [algo]);\r\n        });\r\n\r\n        setIsLoading(false);\r\n        return () => mounted = false;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        mounted = true;\r\n        if (currentUser) setUserVerified(currentUser.verified === 'verified' ? true : false);\r\n        return () => mounted = false;\r\n    }, [currentUser, setCurrentUser])\r\n\r\n    useEffect(() => {\r\n        mounted = true;\r\n        if (!isRendering && !renderPaused) {\r\n            setIsRendering(true);\r\n            if (currentPreset !== previousPreset) {\r\n                window.Caman(\"#presetCopy\", img, function () {\r\n                    //this.resize(this.canvas.width > this.canvas.height ? { width: 500 } : { height: 500 })\r\n                    this.revert(false);\r\n\r\n                    switch (currentPreset) {\r\n                        case 'vintage': this.vintage(); break;\r\n                        case 'lomo': this.lomo(); break;\r\n                        case 'thea': this.thea(); break;\r\n                        case 'clarity': this.clarity(); break;\r\n                        case 'sinCity': this.sinCity(); break;\r\n                        case 'sunrise': this.sunrise(); break;\r\n                        case 'crossProcess': this.crossProcess(); break;\r\n                        case 'orangePeel': this.orangePeel(); break;\r\n                        case 'love': this.love(); break;\r\n                        case 'grungy': this.grungy(); break;\r\n                        case 'jarques': this.jarques(); break;\r\n                        case 'pinhole': this.pinhole(); break;\r\n                        case 'oldBoot': this.oldBoot(); break;\r\n                        case 'glowingSun': this.glowingSun(); break;\r\n                        case 'hazyDays': this.hazyDays(); break;\r\n                        case 'herMajesty': this.herMajesty(); break;\r\n                        case 'nostalgia': this.nostalgia(); break;\r\n                        case 'hemingway': this.hemingway(); break;\r\n                        case 'concentrate': this.concentrate(); break;\r\n                        default: break;\r\n                    }\r\n                    this.render(function () {\r\n                        copyCanvas();\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                copyCanvas();\r\n            }\r\n        }\r\n        //eslint-disable-next-line\r\n        return () => mounted = false;\r\n        //eslint-disable-next-line\r\n    }, [values, endColor, renderPaused]);\r\n\r\n\r\n    function copyCanvas() {\r\n        presetCopy = document.getElementById(\"presetCopy\");\r\n        if (presetCopy) {\r\n            window.Caman(\"#canvasCopy\", img, function () {\r\n                this.revert(false)\r\n                //this.resize(this.canvas.width > this.canvas.height ? { width: 500 } : { height: 500 })\r\n                this.cloneCanvas(presetCopy, \"canvasCopy\");\r\n                if (values.channelR !== 0 || values.channelG !== 0 || values.channelB !== 0) this.channels({ red: values.channelR, green: values.channelG, blue: values.channelB });\r\n                if (values.saturation !== 0) this.saturation(values.saturation);\r\n                if (values.vibrance !== 0) this.vibrance(values.vibrance);\r\n                if (values.sepia !== 0) this.sepia(values.sepia);\r\n                if (values.clip !== 0) this.clip(values.clip);\r\n                if (values.noise !== 0) this.noise(values.noise);\r\n                if (values.contrast !== 0) this.contrast(values.contrast);\r\n                if (values.exposure !== 0) this.exposure(values.exposure);\r\n                if (values.gamma !== 1) this.gamma(values.gamma);\r\n                if (values.hue !== 0) this.hue(values.hue);\r\n                if (values.greyscale) this.greyscale();\r\n                if (values.colorizeStrength !== 0) this.colorize(endColor, values.colorizeStrength);\r\n                if (values.sharpen !== 0) this.sharpen(values.sharpen);\r\n                if (values.dither) this.dither(ditherAlgorithms[values.ditherAlgo]);\r\n                if (values.invert) this.invert();\r\n                if (values.brightness !== 0) this.brightness(values.brightness);\r\n                if (values.motionBlurLayers !== 0) this.compoundMotionBlur(values.motionBlurLayers, values.motionBlurAngle);\r\n                if (values.radialBlur !== 0) this.compoundRadialBlur(values.radialBlur);\r\n                if (values.stackBlur !== 0) this.stackBlur(values.stackBlur);\r\n                this.render(function () {\r\n                    cropCanvas();\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    function cropCanvas() {\r\n        if (currentCrop.width && currentCrop.height) {\r\n            canvasCopy = document.getElementById(\"canvasCopy\");\r\n            window.Caman(\"#canvas\", img, function () {\r\n                if (values.mirrorX === 1 || values.mirrorY === 1) {\r\n                    this.cloneCanvas(canvasCopy, \"canvas\")\r\n                        //.resize((currentCrop.width / 100) * this.canvas.width > (currentCrop.height / 100) * this.canvas.height ? { width: 500 } : { height: 500 })\r\n                        .opacity(values.opacity)\r\n                        .crop(currentCrop.width, currentCrop.height, currentCrop.x, currentCrop.y)\r\n                        .mirror(values.mirrorX, values.mirrorY)\r\n                        .resizePercent({ width: values.resizeWidth, height: values.resizeHeight })\r\n                        .rotate(values.rotateAngle)\r\n\r\n                    if (values.vignetteSize !== 0 && values.vignetteStrength !== 0) this.vignette(values.vignetteSize + '%', values.vignetteStrength);\r\n                    this.render(function () {\r\n                        if ((activeTransformContainer === 0 || activeTransformContainer === 1) && document.getElementById('canvas')) document.getElementById('canvas').classList.add('invisible');\r\n                        setPreviousPreset(values.presetFilter);\r\n                        resizeClassCalculate();\r\n                        setIsRendering(false);\r\n                    });\r\n                }\r\n                else {\r\n                    this.cloneCanvas(canvasCopy, \"canvas\")\r\n                        //.resize((currentCrop.width / 100) * this.canvas.width > (currentCrop.height / 100) * this.canvas.height ? { width: 500 } : { height: 500 })\r\n                        .opacity(values.opacity)\r\n                        .crop(currentCrop.width, currentCrop.height, currentCrop.x, currentCrop.y)\r\n                        .resizePercent({ width: values.resizeWidth, height: values.resizeHeight })\r\n                        .rotate(values.rotateAngle)\r\n                    if (values.vignetteSize !== 0 && values.vignetteStrength !== 0) this.vignette(values.vignetteSize + '%', values.vignetteStrength);\r\n                    this.render(function () {\r\n                        if ((activeTransformContainer === 0 || activeTransformContainer === 1) && document.getElementById('canvas')) document.getElementById('canvas').classList.add('invisible');\r\n                        setPreviousPreset(values.presetFilter);\r\n                        resizeClassCalculate();\r\n                        setIsRendering(false);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        mounted = true;\r\n        var c = document.getElementById('canvas');\r\n        if (c) {\r\n            if (activeTransformContainer === 0 || activeTransformContainer === 1) {\r\n                c.classList.add('invisible');\r\n            }\r\n            else {\r\n                c.classList.remove('invisible');\r\n            }\r\n        }\r\n        return () => mounted = false;\r\n    }, [activeTransformContainer])\r\n\r\n    useEffect(() => {\r\n        mounted = true;\r\n        setCurrentRotate(values.rotateAngle);\r\n        return () => mounted = false;\r\n    }, [values.rotateAngle]);\r\n    useEffect(() => {\r\n        mounted = true;\r\n        setCurrentWidth(values.resizeWidth);\r\n        return () => mounted = false;\r\n    }, [values.resizeWidth]);\r\n    useEffect(() => {\r\n        mounted = true;\r\n        setCurrentHeight(values.resizeHeight);\r\n        return () => mounted = false;\r\n    }, [values.resizeHeight]);\r\n    useEffect(() => {\r\n        mounted = true;\r\n        setValues((prevState) => ({\r\n            ...prevState,\r\n            presetFilter: currentPreset\r\n        }))\r\n        return () => mounted = false;\r\n    }, [currentPreset]);\r\n    useEffect(() => {\r\n        setCurrentVignetteSize(values.vignetteSize);\r\n    }, [values.vignetteSize]);\r\n    useEffect(() => {\r\n        setCurrentVignetteStrength(values.vignetteStrength);\r\n    }, [values.vignetteStrength]);\r\n    useEffect(() => {\r\n        mounted = true;\r\n        setMinimizedDimensions();\r\n        return () => mounted = false;\r\n    }, [expand]);\r\n    useEffect(() => {\r\n        if (!isResettingCrop) {\r\n            cropCanvas();\r\n            setIsResettingCrop(true);\r\n        }\r\n    }, [isResettingCrop]);\r\n\r\n\r\n\r\n    function cloneAttributes(sourceNode, element) {\r\n        let attr;\r\n        let attributes = Array.prototype.slice.call(sourceNode.attributes);\r\n        //eslint-disable-next-line\r\n        while (attr = attributes.pop()) {\r\n            element.setAttribute(attr.nodeName, attr.nodeValue);\r\n        }\r\n    }\r\n\r\n    function setMinimizedDimensions() {\r\n        let canvasCopy = document.getElementById(\"canvasCopy\").getBoundingClientRect();\r\n        let rootElement = document.documentElement;\r\n        if (rootElement && canvasCopy) {\r\n            rootElement.style.setProperty('--minimized-width', canvasCopy.width + 'px');\r\n            rootElement.style.setProperty('--minimized-height', canvasCopy.height + 'px');\r\n        }\r\n    }\r\n\r\n    function resizeClassCalculate() {\r\n        if (!document.getElementById('presetCopy') || !document.getElementById('canvas') || !document.getElementById('canvasCover')) return;\r\n        var presetCopy = document.getElementById('presetCopy').getBoundingClientRect();\r\n        var canvas = document.getElementById('canvas');\r\n        var canvasScreen = document.getElementById('canvasCover').getBoundingClientRect();\r\n        if (presetCopy && canvasScreen && (presetCopy.width * presetCopy.height !== 0) && (canvasScreen.width * canvasScreen.height !== 0)) {\r\n            //console.log((presetCopy.width/presetCopy.height).toString() + ' - ' + (canvasScreen.width/canvasScreen.height).toString() + ' = ' + ((presetCopy.width/presetCopy.height)-(canvasScreen.width/canvasScreen.height)).toString())\r\n            setResizeClass((presetCopy.width / presetCopy.height) - (canvasScreen.width / canvasScreen.height) > 0 ? 'autoHeight' : 'autoWidth');\r\n        }\r\n        else setResizeClass('');\r\n        if (canvas && canvasScreen && (canvas.width * canvas.height !== 0) && (canvasScreen.width * canvasScreen.height !== 0)) {\r\n            //console.log((canvas.width/canvas.height).toString() + ' - ' + (canvasScreen.width/canvasScreen.height).toString() + ' = ' + ((canvas.width/canvas.height)-(canvasScreen.width/canvasScreen.height)).toString())\r\n            setResizeClassCropped((canvas.width / canvas.height) - (canvasScreen.width / canvasScreen.height) > 0 ? 'autoHeightCropped' : 'autoWidthCropped');\r\n        }\r\n        else setResizeClassCropped('');\r\n        setMinimizedDimensions();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('Fi:' + currentPreset);\r\n        else setIsUndoActive(false);\r\n    }, [currentPreset]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('br:' + values.brightness);\r\n        else setIsUndoActive(false);\r\n    }, [values.brightness]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('co:' + values.contrast);\r\n        else setIsUndoActive(false);\r\n    }, [values.contrast]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('ex:' + values.exposure);\r\n        else setIsUndoActive(false);\r\n    }, [values.exposure]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('ga:' + values.gamma);\r\n        else setIsUndoActive(false);\r\n    }, [values.gamma]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('op:' + values.opacity);\r\n        else setIsUndoActive(false);\r\n    }, [values.opacity]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('sa:' + values.saturation);\r\n        else setIsUndoActive(false);\r\n    }, [values.saturation]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('vi:' + values.vibrance);\r\n        else setIsUndoActive(false);\r\n    }, [values.vibrance]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('hu:' + values.hue);\r\n        else setIsUndoActive(false);\r\n    }, [values.hue]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('in:' + (values.invert ? 1 : 0));\r\n        else setIsUndoActive(false);\r\n    }, [values.invert]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('se:' + values.sepia);\r\n        else setIsUndoActive(false);\r\n    }, [values.sepia]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('cl:' + values.clip);\r\n        else setIsUndoActive(false);\r\n    }, [values.clip]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('re:' + values.channelR);\r\n        else setIsUndoActive(false);\r\n    }, [values.channelR]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('gr:' + values.channelG);\r\n        else setIsUndoActive(false);\r\n    }, [values.channelG]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('bl:' + values.channelB);\r\n        else setIsUndoActive(false);\r\n    }, [values.channelB]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('gy:' + (values.greyscale ? 1 : 0));\r\n        else setIsUndoActive(false);\r\n    }, [values.greyscale]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('hex:' + endColor);\r\n        else setIsUndoActive(false);\r\n    }, [endColor]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('coS:' + values.colorizeStrength);\r\n        else setIsUndoActive(false);\r\n    }, [values.colorizeStrength]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('no:' + values.noise);\r\n        else setIsUndoActive(false);\r\n    }, [values.noise]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('sh:' + values.sharpen);\r\n        else setIsUndoActive(false);\r\n    }, [values.sharpen]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('blr:' + values.stackBlur);\r\n        else setIsUndoActive(false);\r\n    }, [values.stackBlur]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('rblr:' + values.radialBlur);\r\n        else setIsUndoActive(false);\r\n    }, [values.radialBlur]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('di:' + (values.dither ? 1 : 0));\r\n        else setIsUndoActive(false);\r\n    }, [values.dither]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('diA:' + values.ditherAlgo);\r\n        else setIsUndoActive(false);\r\n    }, [values.ditherAlgo]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('mblr:' + values.motionBlurLayers);\r\n        else setIsUndoActive(false);\r\n    }, [values.motionBlurLayers]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('mblrA:' + values.motionBlurAngle);\r\n        else setIsUndoActive(false);\r\n    }, [values.motionBlurAngle]);\r\n    useEffect(() => {\r\n        if (!isUndoActive && (currentVignetteSize !== values.vignetteSize)) addCommand('vin:' + values.vignetteSize);\r\n        else setIsUndoActive(false);\r\n    }, [values.vignetteSize]);\r\n    useEffect(() => {\r\n        if (!isUndoActive && (currentVignetteStrength !== values.vignetteStrength)) addCommand('vinS:' + values.vignetteStrength);\r\n        else setIsUndoActive(false);\r\n    }, [values.vignetteStrength]);\r\n    function addCropCommand() {\r\n        addCommand('cr:' + currentCrop.width.toFixed(2) + ':' + currentCrop.height.toFixed(2) + ':' + currentCrop.x.toFixed(2) + ':' + currentCrop.y.toFixed(2));\r\n    }\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('ro:' + values.rotateAngle);\r\n        else setIsUndoActive(false);\r\n    }, [values.rotateAngle]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('aw:' + values.resizeWidth);\r\n        else setIsUndoActive(false);\r\n    }, [values.resizeWidth]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('ah:' + values.resizeHeight);\r\n        else setIsUndoActive(false);\r\n    }, [values.resizeHeight]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('mx:' + values.mirrorX);\r\n        else setIsUndoActive(false);\r\n    }, [values.mirrorX]);\r\n    useEffect(() => {\r\n        if (!isUndoActive) addCommand('my:' + values.mirrorY);\r\n        else setIsUndoActive(false);\r\n    }, [values.mirrorY]);\r\n\r\n\r\n    /* eslint-enable */\r\n\r\n\r\n    function addCommand(command) {\r\n        if (command !== commandStack[commandStack.length - 1]) {\r\n            let newCommandStack = [...commandStack];\r\n            if (newCommandStack.push(command) > MAX_COMMAND_STACK) newCommandStack.shift();\r\n            setCommandStack([...newCommandStack]);\r\n            setRedoStack([]);\r\n        }\r\n    }\r\n\r\n    function undoCommand() {\r\n        if (commandStack.length > 0) {\r\n            setIsUndoActive(true);\r\n            parseUndo(commandStack[commandStack.length - 1]);\r\n            let newCommandStack = [...commandStack];\r\n            let newRedoStack = [...redoStack, newCommandStack.pop()];\r\n            setRedoStack([...newRedoStack]);\r\n            setCommandStack([...newCommandStack]);\r\n        }\r\n    }\r\n\r\n    function redoCommand() {\r\n        if (redoStack.length > 0) {\r\n            setIsUndoActive(true);\r\n            parseRedo(redoStack[redoStack.length - 1]);\r\n            let newRedoStack = [...redoStack];\r\n            let newCommandStack = [...commandStack, newRedoStack.pop()];\r\n            setRedoStack([...newRedoStack]);\r\n            setCommandStack([...newCommandStack]);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function parseUndo(command) {\r\n        var i, commandValues;\r\n        for (i = commandStack.length - 2; i >= 0; i--) {\r\n            if (commandStack[i].split(':', 1)[0] === command.split(':', 1)[0]) {\r\n                break;\r\n            }\r\n        }\r\n        commandValues = i !== -1 ? commandStack[i].split(':') : [];\r\n        switch (command.split(':', 1)[0]) {\r\n            case 'Fi': setPreviousPreset(commandValues.length > 0 ? values.presetFilter : 'initial');\r\n                setCurrentPreset(commandValues.length > 0 ? commandValues[1] : resetValues.presetFilter)\r\n                break;\r\n            case 'br': setValues((prevState) => ({\r\n                ...prevState,\r\n                brightness: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.brightness\r\n            }))\r\n                break;\r\n            case 'co': setValues((prevState) => ({\r\n                ...prevState,\r\n                contrast: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.contrast\r\n            }))\r\n                break;\r\n            case 'ex': setValues((prevState) => ({\r\n                ...prevState,\r\n                exposure: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.exposure\r\n            }))\r\n                break;\r\n            case 'ga': setValues((prevState) => ({\r\n                ...prevState,\r\n                gamma: commandValues.length > 0 ? parseFloat((parseFloat(commandValues[1]).toFixed(1))) : resetValues.gamma\r\n            }))\r\n                break;\r\n            case 'op': setValues((prevState) => ({\r\n                ...prevState,\r\n                opacity: commandValues.length > 0 ? parseFloat((parseFloat(commandValues[1]).toFixed(2))) : resetValues.opacity\r\n            }))\r\n                break;\r\n            case 'sa': setValues((prevState) => ({\r\n                ...prevState,\r\n                saturation: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.saturation\r\n            }))\r\n                break;\r\n            case 'vi': setValues((prevState) => ({\r\n                ...prevState,\r\n                vibrance: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.vibrance\r\n            }))\r\n                break;\r\n            case 'hu': setValues((prevState) => ({\r\n                ...prevState,\r\n                hue: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.hue\r\n            }))\r\n                break;\r\n            case 'in': setValues((prevState) => ({\r\n                ...prevState,\r\n                invert: (commandValues.length > 0) && (parseInt(commandValues[1]) === 1) ? true : false\r\n            }))\r\n                break;\r\n            case 'se': setValues((prevState) => ({\r\n                ...prevState,\r\n                sepia: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.sepia\r\n            }))\r\n                break;\r\n            case 'cl': setValues((prevState) => ({\r\n                ...prevState,\r\n                clip: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.clip\r\n            }))\r\n                break;\r\n            case 're': setValues((prevState) => ({\r\n                ...prevState,\r\n                channelR: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.channelR\r\n            }))\r\n                break;\r\n            case 'gr': setValues((prevState) => ({\r\n                ...prevState,\r\n                channelG: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.channelG\r\n            }))\r\n                break;\r\n            case 'bl': setValues((prevState) => ({\r\n                ...prevState,\r\n                channelB: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.channelB\r\n            }))\r\n                break;\r\n            case 'gy': setValues((prevState) => ({\r\n                ...prevState,\r\n                greyscale: (commandValues.length > 0) && (parseInt(commandValues[1]) === 1) ? true : false\r\n            }))\r\n                break;\r\n            case 'hex': setCurrentColor(commandValues.length > 0 ? commandValues[1] : '#B3DEE5');\r\n                setEndColor(commandValues.length > 0 ? commandValues[1] : '#B3DEE5');\r\n                break;\r\n            case 'coS': setValues((prevState) => ({\r\n                ...prevState,\r\n                colorizeStrength: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.colorizeStrength\r\n            }))\r\n                break;\r\n            case 'no': setValues((prevState) => ({\r\n                ...prevState,\r\n                noise: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.noise\r\n            }))\r\n                break;\r\n            case 'sh': setValues((prevState) => ({\r\n                ...prevState,\r\n                sharpen: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.sharpen\r\n            }))\r\n                break;\r\n            case 'blr': setValues((prevState) => ({\r\n                ...prevState,\r\n                stackBlur: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.stackBlur\r\n            }))\r\n                break;\r\n            case 'rblr': setValues((prevState) => ({\r\n                ...prevState,\r\n                radialBlur: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.radialBlur\r\n            }))\r\n                break;\r\n            case 'di': setValues((prevState) => ({\r\n                ...prevState,\r\n                dither: (commandValues.length > 0) && (parseInt(commandValues[1]) === 1) ? true : false\r\n            }))\r\n                break;\r\n            case 'diA': setValues((prevState) => ({\r\n                ...prevState,\r\n                ditherAlgo: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.ditherAlgo\r\n            }))\r\n                break;\r\n            case 'mblr': setValues((prevState) => ({\r\n                ...prevState,\r\n                motionBlurLayers: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.motionBlurLayers\r\n            }))\r\n                break;\r\n            case 'mblrA': setValues((prevState) => ({\r\n                ...prevState,\r\n                motionBlurAngle: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.motionBlurAngle\r\n            }))\r\n                break;\r\n            case 'vin': setValues((prevState) => ({\r\n                ...prevState,\r\n                vignetteSize: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.vignetteSize\r\n            }))\r\n                break;\r\n            case 'vinS': setValues((prevState) => ({\r\n                ...prevState,\r\n                vignetteStrength: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.vignetteStrength\r\n            }))\r\n                break;\r\n            case 'cr': setCurrentCrop(commandValues.length > 0 ?\r\n                {\r\n                    unit: '%',\r\n                    width: parseInt(commandValues[1]),\r\n                    height: parseInt(commandValues[2]),\r\n                    x: parseInt(commandValues[3]),\r\n                    y: parseInt(commandValues[4]),\r\n                }\r\n                : { ...cropReset }\r\n            )\r\n                setIsResettingCrop(false);\r\n                break;\r\n            case 'ro': setValues((prevState) => ({\r\n                ...prevState,\r\n                rotateAngle: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.rotateAngle\r\n            }))\r\n                break;\r\n            case 'aw': setValues((prevState) => ({\r\n                ...prevState,\r\n                resizeWidth: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.resizeWidth\r\n            }))\r\n                break;\r\n            case 'ah': setValues((prevState) => ({\r\n                ...prevState,\r\n                resizeHeight: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.resizeHeight\r\n            }))\r\n                break;\r\n            case 'mx': setValues((prevState) => ({\r\n                ...prevState,\r\n                mirrorX: (commandValues.length > 0) && (parseInt(commandValues[1]) === 1) ? 1 : 0\r\n            }))\r\n                break;\r\n            case 'my': setValues((prevState) => ({\r\n                ...prevState,\r\n                mirrorY: (commandValues.length > 0) && (parseInt(commandValues[1]) === 1) ? 1 : 0\r\n            }))\r\n                break;\r\n            default: break;\r\n            //'fi', 'br', 'co', 'ex', 'ga', 'op', 'sa', 'vi', 'hu', 'in', 'se', 'cl', 're', 'gr', 'bl', 'gy', 'hex', 'coS', 'no', 'sh', 'blr', 'rblr', 'di', 'diA', 'mblr', 'mblrA', 'vin', 'vinS', 'cr', 'ro', 'aw', 'ah', 'mx', 'my'\r\n        }\r\n    }\r\n\r\n    function parseRedo(command) {\r\n        var commandValues = command.split(':');\r\n        switch (command.split(':', 1)[0]) {\r\n            case 'Fi': setPreviousPreset(commandValues.length > 0 ? values.presetFilter : 'initial');\r\n                setCurrentPreset(commandValues.length > 0 ? commandValues[1] : resetValues.presetFilter)\r\n                break;\r\n            case 'br': setValues((prevState) => ({\r\n                ...prevState,\r\n                brightness: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.brightness\r\n            }))\r\n                break;\r\n            case 'co': setValues((prevState) => ({\r\n                ...prevState,\r\n                contrast: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.contrast\r\n            }))\r\n                break;\r\n            case 'ex': setValues((prevState) => ({\r\n                ...prevState,\r\n                exposure: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.exposure\r\n            }))\r\n                break;\r\n            case 'ga': setValues((prevState) => ({\r\n                ...prevState,\r\n                gamma: commandValues.length > 0 ? parseFloat((parseFloat(commandValues[1]).toFixed(1))) : resetValues.gamma\r\n            }))\r\n                break;\r\n            case 'op': setValues((prevState) => ({\r\n                ...prevState,\r\n                opacity: commandValues.length > 0 ? parseFloat((parseFloat(commandValues[1]).toFixed(2))) : resetValues.opacity\r\n            }))\r\n                break;\r\n            case 'sa': setValues((prevState) => ({\r\n                ...prevState,\r\n                saturation: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.saturation\r\n            }))\r\n                break;\r\n            case 'vi': setValues((prevState) => ({\r\n                ...prevState,\r\n                vibrance: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.vibrance\r\n            }))\r\n                break;\r\n            case 'hu': setValues((prevState) => ({\r\n                ...prevState,\r\n                hue: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.hue\r\n            }))\r\n                break;\r\n            case 'in': setValues((prevState) => ({\r\n                ...prevState,\r\n                invert: (commandValues.length > 0) && (parseInt(commandValues[1]) === 1) ? true : false\r\n            }))\r\n                break;\r\n            case 'se': setValues((prevState) => ({\r\n                ...prevState,\r\n                sepia: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.sepia\r\n            }))\r\n                break;\r\n            case 'cl': setValues((prevState) => ({\r\n                ...prevState,\r\n                clip: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.clip\r\n            }))\r\n                break;\r\n            case 're': setValues((prevState) => ({\r\n                ...prevState,\r\n                channelR: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.channelR\r\n            }))\r\n                break;\r\n            case 'gr': setValues((prevState) => ({\r\n                ...prevState,\r\n                channelG: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.channelG\r\n            }))\r\n                break;\r\n            case 'bl': setValues((prevState) => ({\r\n                ...prevState,\r\n                channelB: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.channelB\r\n            }))\r\n                break;\r\n            case 'gy': setValues((prevState) => ({\r\n                ...prevState,\r\n                greyscale: (commandValues.length > 0) && (parseInt(commandValues[1]) === 1) ? true : false\r\n            }))\r\n                break;\r\n            case 'hex': setCurrentColor(commandValues.length > 0 ? commandValues[1] : '#B3DEE5');\r\n                setEndColor(commandValues.length > 0 ? commandValues[1] : '#B3DEE5');\r\n                break;\r\n            case 'coS': setValues((prevState) => ({\r\n                ...prevState,\r\n                colorizeStrength: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.colorizeStrength\r\n            }))\r\n                break;\r\n            case 'no': setValues((prevState) => ({\r\n                ...prevState,\r\n                noise: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.noise\r\n            }))\r\n                break;\r\n            case 'sh': setValues((prevState) => ({\r\n                ...prevState,\r\n                sharpen: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.sharpen\r\n            }))\r\n                break;\r\n            case 'blr': setValues((prevState) => ({\r\n                ...prevState,\r\n                stackBlur: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.stackBlur\r\n            }))\r\n                break;\r\n            case 'rblr': setValues((prevState) => ({\r\n                ...prevState,\r\n                radialBlur: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.radialBlur\r\n            }))\r\n                break;\r\n            case 'di': setValues((prevState) => ({\r\n                ...prevState,\r\n                dither: (commandValues.length > 0) && (parseInt(commandValues[1]) === 1) ? true : false\r\n            }))\r\n                break;\r\n            case 'diA': setValues((prevState) => ({\r\n                ...prevState,\r\n                ditherAlgo: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.ditherAlgo\r\n            }))\r\n                break;\r\n            case 'mblr': setValues((prevState) => ({\r\n                ...prevState,\r\n                motionBlurLayers: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.motionBlurLayers\r\n            }))\r\n                break;\r\n            case 'mblrA': setValues((prevState) => ({\r\n                ...prevState,\r\n                motionBlurAngle: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.motionBlurAngle\r\n            }))\r\n                break;\r\n            case 'vin': setValues((prevState) => ({\r\n                ...prevState,\r\n                vignetteSize: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.vignetteSize\r\n            }))\r\n                break;\r\n            case 'vinS': setValues((prevState) => ({\r\n                ...prevState,\r\n                vignetteStrength: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.vignetteStrength\r\n            }))\r\n                break;\r\n            case 'cr': setCurrentCrop(commandValues.length > 0 ?\r\n                {\r\n                    unit: '%',\r\n                    width: parseInt(commandValues[1]),\r\n                    height: parseInt(commandValues[2]),\r\n                    x: parseInt(commandValues[3]),\r\n                    y: parseInt(commandValues[4]),\r\n                }\r\n                : { ...cropReset }\r\n            )\r\n                setIsResettingCrop(false);\r\n                break;\r\n            case 'ro': setValues((prevState) => ({\r\n                ...prevState,\r\n                rotateAngle: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.rotateAngle\r\n            }))\r\n                break;\r\n            case 'aw': setValues((prevState) => ({\r\n                ...prevState,\r\n                resizeWidth: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.resizeWidth\r\n            }))\r\n                break;\r\n            case 'ah': setValues((prevState) => ({\r\n                ...prevState,\r\n                resizeHeight: commandValues.length > 0 ? parseInt(commandValues[1]) : resetValues.resizeHeight\r\n            }))\r\n                break;\r\n            case 'mx': setValues((prevState) => ({\r\n                ...prevState,\r\n                mirrorX: (commandValues.length > 0) && (parseInt(commandValues[1]) === 1) ? 1 : 0\r\n            }))\r\n                break;\r\n            case 'my': setValues((prevState) => ({\r\n                ...prevState,\r\n                mirrorY: (commandValues.length > 0) && (parseInt(commandValues[1]) === 1) ? 1 : 0\r\n            }))\r\n                break;\r\n            default: break;\r\n            //'fi', 'br', 'co', 'ex', 'ga', 'op', 'sa', 'vi', 'hu', 'in', 'se', 'cl', 're', 'gr', 'bl', 'gy', 'hex', 'coS', 'no', 'sh', 'blr', 'rblr', 'di', 'diA', 'mblr', 'mblrA', 'vin', 'vinS', 'cr', 'ro', 'aw', 'ah', 'mx', 'my'\r\n        }\r\n    }\r\n\r\n    // Download\r\n    function download(canvas, filename) {\r\n        // Init event\r\n        let e;\r\n        // Create link\r\n        const link = document.createElement(\"a\");\r\n\r\n        // Set props\r\n        link.download = filename;\r\n        link.href = canvas.toDataURL(\"image/\" + (isPNG ? 'png' : 'jpeg'), imageQuality);\r\n        // New mouse event\r\n        e = new MouseEvent(\"click\");\r\n        // Dispatch event\r\n        link.dispatchEvent(e);\r\n    }\r\n\r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file && file.type.match('image.*')) {\r\n            setFileName(file.name);\r\n            previewFile(file);\r\n            setFileInputState(e.target.value);\r\n        }\r\n        else {\r\n            setFileInputState('');\r\n            setPreviewSource('');\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const previewFile = (file) => {\r\n        setIsLoading(true);\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        canvas = document.getElementById(\"canvas\");\r\n        presetCopy = document.getElementById(\"presetCopy\");\r\n        canvasCopy = document.getElementById(\"canvasCopy\");\r\n        ctxPreset = presetCopy.getContext(\"2d\");\r\n        ctxCopy = canvasCopy.getContext(\"2d\");\r\n        setActiveTransformContainer(-1);\r\n        setExpand(false);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n            window.Caman(\"#canvasCopy\", img, function () {\r\n                this.reloadCanvasData();\r\n            });\r\n            window.Caman(\"#presetCopy\", img, function () {\r\n                this.reloadCanvasData();\r\n                // Create image\r\n                img = new Image();\r\n                // Set image src\r\n                img.src = reader.result;\r\n                // On image load add to canvas\r\n                img.onload = function () {\r\n                    if (img.width > maxSize || img.height > maxSize) {\r\n                        if (img.width > img.height) {\r\n                            presetCopy.width = maxSize;\r\n                            presetCopy.height = maxSize * (img.height / img.width);\r\n                        }\r\n                        else {\r\n                            presetCopy.height = maxSize;\r\n                            presetCopy.width = maxSize * (img.width / img.height);\r\n                        }\r\n                    }\r\n                    else {\r\n                        presetCopy.width = img.width;\r\n                        presetCopy.height = img.height;\r\n                    }\r\n                    ctxPreset.drawImage(img, 0, 0, img.width, img.height, 0, 0, presetCopy.width, presetCopy.height);\r\n                    presetCopy.removeAttribute(\"data-caman-id\");\r\n\r\n                    canvasCopy.width = presetCopy.width;\r\n                    canvasCopy.height = presetCopy.height;\r\n                    ctxCopy.drawImage(presetCopy, 0, 0, presetCopy.width, presetCopy.height);\r\n                    canvasCopy.removeAttribute(\"data-caman-id\");\r\n                    setMinimizedDimensions();\r\n                    copyCanvas();\r\n\r\n                    setCurrentCrop({ ...cropReset });\r\n                    setPreviousPreset('initial');\r\n                    setCurrentPreset('');\r\n                    setValues({ ...resetValues });\r\n                    setCommandStack([]);\r\n                    setRedoStack([]);\r\n                    setRenderPaused(false);\r\n                    setIsLoading(false);\r\n                };\r\n                /*\r\n                window.Caman.Event.listen(\"processStart\", function (job) {\r\n                });\r\n                window.Caman.Event.listen(\"processComplete\", function (job) {\r\n                    //console.log(\"Finished:\", job.name);\r\n                });\r\n                window.Caman.Event.listen(\"renderFinished\", function () {\r\n                    //console.log(\"Finished Rendering\");\r\n                });\r\n                */\r\n            });\r\n        }\r\n    }\r\n\r\n    const postFile = (e) => {\r\n        e.preventDefault();\r\n        if (!previewSource) return;\r\n        canvas = document.getElementById(\"canvas\");\r\n        if (postOriginal) postImage(previewSource);\r\n        else if (canvas) {\r\n            var editedImage = canvas.toDataURL(\"image/\" + (isPNG ? 'png' : 'jpeg'), imageQuality);\r\n            postImage(editedImage);\r\n        }\r\n    }\r\n\r\n    const postImage = (base64EncodedImage) => {\r\n        var tempDescription = description;\r\n        var tempPostView = postView;\r\n        setFileInputState('');\r\n        setPreviewSource('');\r\n        setDescription('');\r\n        setPostView('Public');\r\n        setIsLoading(true);\r\n        if (document.getElementById('fileUploadForm')) document.getElementById('fileUploadForm').reset();\r\n        Axios.post(url + '/image/upload/post', {\r\n            data: base64EncodedImage,\r\n            userID: currentUser.id,\r\n            description: tempDescription,\r\n            view: tempPostView\r\n        }).then((response) => {\r\n            props.history.push('/posts/' + response.data[0].id);\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"blog-header small-header\">\r\n                <div className=\"container btrans small-btrans\">\r\n                    <h1 className=\"text-center\"><strong>Foto Editor</strong></h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-sm-12 blog-main\">\r\n\r\n                        <div className=\"blog-post\">\r\n                            <Form acceptCharset=\"UTF-8\" onSubmit={(e) => { e.preventDefault(); }} id=\"fileUploadForm\">\r\n                                <Form.Group>\r\n                                    <Form.File accept=\"image/x-png,image/gif,image/jpeg\" value={fileInputState} onChange={handleFileInputChange} className=\"fileUpload\" id=\"fileUploadID\" name=\"image\" label=\"Upload photo\" />\r\n\r\n                                    <div id=\"maxImageSizeContainer\" className=\"sliderCoupleContainer\">\r\n\r\n                                        <div className=\"sliderCouple\">\r\n                                            <div className=\"sliderFlexWrap\">\r\n                                                <p>50px</p>\r\n                                                <RangeSlider\r\n                                                    value={maxSize}\r\n                                                    onChange={(e) => { setMaxSize(e.target.value) }}\r\n                                                    onAfterChange={\r\n                                                        (e) => { setMaxSize(e.target.value) }\r\n                                                    }\r\n                                                    min={50}\r\n                                                    max={1600}\r\n                                                    step={50}\r\n                                                    className=\"rotateRange\"\r\n                                                    variant=\"light\"\r\n                                                    tooltipLabel={currentValue => `${currentValue}px`}\r\n                                                    tooltipPlacement='top'\r\n                                                    tooltip='on'\r\n                                                />\r\n                                                <p>1600px</p>\r\n                                            </div>\r\n                                            <div id=\"maxSize-add\" onClick={() => {\r\n                                                setMaxSize((prevState) => (\r\n                                                    prevState < 1550 ? prevState + 50 : 1600\r\n                                                ))\r\n                                            }} className=\"valueButton\">\r\n                                                +\r\n                                                </div>\r\n                                            <p>Max Size</p>\r\n                                            <div id=\"maxSize-remove\" onClick={() => {\r\n                                                setMaxSize((prevState) => (\r\n                                                    prevState > 100 ? prevState - 50 : 50\r\n                                                ))\r\n                                            }} className=\"valueButton\">\r\n                                                -\r\n                                                </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Form.Group>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"activeFilterContainer autoLeftBorder\">\r\n\r\n                                        <div className={\"toggle-expandContainer buttonCoupleContainer align-self-center\" + (activeTransformContainer === -1 ? '' : ' display-none')}>\r\n                                            <p className=\"toggle-expand-text\">{expand ? 'Minimize' : 'Expand'}</p>\r\n                                            <div id=\"toggle-expand\" onClick={() => { setExpand(!expand); resizeClassCalculate(); }} className={\"editorButton\" + (expand ? ' activeButton' : '')}><BootstrapIcon type={expand ? 75 : 74} /></div>\r\n                                        </div>\r\n\r\n                                        <div className={\"toggle-expandContainer buttonCoupleContainer align-self-center\" + (activeTransformContainer === 0 ? '' : ' display-none')}>\r\n                                            <p className=\"toggle-expand-text\">Original Image</p>\r\n                                            <div onClick={() => { setExpand(!expand); resizeClassCalculate(); }} className={\"editorButton\" + (expand ? ' activeButton' : '')}><BootstrapIcon type={expand ? 75 : 74} /></div>\r\n                                        </div>\r\n\r\n                                        <div className={\"toggle-expandContainer buttonCoupleContainer align-self-center\" + (activeTransformContainer === 1 ? '' : ' display-none')}>\r\n                                            <p className=\"toggle-expand-text\">Select Crop Area</p>\r\n                                            <div id=\"crop-reset\" onClick={() => { addCommand('cr:100:100:0:0'); setCurrentCrop({ ...cropReset }); setIsResettingCrop(false); }} className=\"editorButton\"><BootstrapIcon type={82} /></div>\r\n                                            <div onClick={() => { setExpand(!expand); resizeClassCalculate(); }} className={\"editorButton\" + (expand ? ' activeButton' : '')}><BootstrapIcon type={expand ? 75 : 74} /></div>\r\n                                            <div id=\"crop-confirm\" onClick={() => { setActiveTransformContainer(-1) }} className=\"editorButton\"><BootstrapIcon type={83} /></div>\r\n                                        </div>\r\n\r\n                                        <div className={\"sliderCoupleContainer\" + (activeTransformContainer === 2 ? '' : ' display-none')}>\r\n                                            <p>Rotate</p>\r\n                                            <div className=\"sliderCouple\">\r\n                                                <div className=\"sliderFlexWrap\">\r\n\r\n                                                    <RangeSlider\r\n                                                        value={currentRotate}\r\n                                                        onChange={(e) => { setCurrentRotate(e.target.value) }}\r\n                                                        onAfterChange={\r\n                                                            (e) => {\r\n                                                                setValues((prevState) => ({\r\n                                                                    ...prevState,\r\n                                                                    rotateAngle: parseInt(e.target.value)\r\n                                                                }))\r\n                                                            }\r\n                                                        }\r\n                                                        min={-180}\r\n                                                        max={180}\r\n                                                        step={1}\r\n                                                        className=\"rotateRange\"\r\n                                                        variant=\"light\"\r\n                                                        tooltipLabel={currentValue => `${currentValue}°`}\r\n                                                        tooltipPlacement='top'\r\n                                                        tooltip='on'\r\n                                                    />\r\n                                                </div>\r\n                                                <div id=\"rotate-add\" onClick={() => {\r\n                                                    setCurrentRotate(values.rotateAngle < 180 ? values.rotateAngle + 1 : -180);\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        rotateAngle: prevState.rotateAngle < 180 ? prevState.rotateAngle + 1 : -180\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    +\r\n                                                </div>\r\n                                                <div id=\"rotate-clockwise\" onClick={() => {\r\n                                                    setCurrentRotate(values.rotateAngle === 0 ? 90 : values.rotateAngle === 90 ? 180 : (values.rotateAngle === 180 || values.rotateAngle === -180) ? -90 : 0);\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        rotateAngle: prevState.rotateAngle === 0 ? 90 : prevState.rotateAngle === 90 ? -180 : (prevState.rotateAngle === 180 || prevState.rotateAngle === -180) ? -90 : 0\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    {(values.rotateAngle === 0 || values.rotateAngle === 90 || values.rotateAngle === 180 || values.rotateAngle === -180 || values.rotateAngle === -90) ?\r\n                                                        <BootstrapIcon type={40} />\r\n                                                        : <BootstrapIcon type={39} />\r\n                                                    }\r\n                                                </div>\r\n                                                <div id=\"rotate-remove\" onClick={() => {\r\n                                                    setCurrentRotate(values.rotateAngle > -180 ? values.rotateAngle - 1 : 180);\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        rotateAngle: prevState.rotateAngle > -180 ? prevState.rotateAngle - 1 : 180\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    -\r\n                                                    </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"sliderCoupleContainer\" + (activeTransformContainer === 3 ? '' : ' display-none')}>\r\n                                            <div className=\"sliderCouple\">\r\n                                                <div id=\"resizeWidth-add\" onClick={() => {\r\n                                                    setCurrentWidth(values.resizeWidth < 99 ? values.resizeWidth + 1 : 100);\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        resizeWidth: prevState.resizeWidth < 99 ? prevState.resizeWidth + 1 : 100\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    +\r\n                                                </div>\r\n                                                <div id=\"resizeWidth-Original\" onClick={() => {\r\n                                                    setCurrentWidth(100);\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        resizeWidth: 100\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    <BootstrapIcon type={42} />\r\n                                                </div>\r\n                                                <div id=\"resizeWidth-remove\" onClick={() => {\r\n                                                    setCurrentWidth(values.resizeWidth > 6 ? values.resizeWidth - 1 : 5);\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        resizeWidth: prevState.resizeWidth > 6 ? prevState.resizeWidth - 1 : 5\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    -\r\n                                                    </div>\r\n                                                <div className=\"sliderFlexWrap Aspect\">\r\n\r\n                                                    <RangeSlider\r\n                                                        value={currentWidth}\r\n                                                        onChange={(e) => { setCurrentWidth(e.target.value) }}\r\n                                                        onAfterChange={\r\n                                                            (e) => {\r\n                                                                setValues((prevState) => ({\r\n                                                                    ...prevState,\r\n                                                                    resizeWidth: parseInt(e.target.value)\r\n                                                                }))\r\n                                                            }\r\n                                                        }\r\n                                                        min={5}\r\n                                                        max={100}\r\n                                                        step={1}\r\n                                                        className=\"resizeRange\"\r\n                                                        variant=\"light\"\r\n                                                        tooltipLabel={currentValue => `${currentValue}%`}\r\n                                                        tooltipPlacement='top'\r\n                                                        tooltip='auto'\r\n                                                    />\r\n                                                </div>\r\n\r\n                                                <div className=\"sliderFlexWrap Aspect\">\r\n\r\n                                                    <RangeSlider\r\n                                                        value={currentHeight}\r\n                                                        onChange={(e) => { setCurrentHeight(e.target.value) }}\r\n                                                        onAfterChange={\r\n                                                            (e) => {\r\n                                                                setValues((prevState) => ({\r\n                                                                    ...prevState,\r\n                                                                    resizeHeight: parseInt(e.target.value)\r\n                                                                }))\r\n                                                            }\r\n                                                        }\r\n                                                        min={5}\r\n                                                        max={100}\r\n                                                        step={1}\r\n                                                        className=\"resizeRange\"\r\n                                                        variant=\"light\"\r\n                                                        tooltipLabel={currentValue => `${currentValue}%`}\r\n                                                        tooltipPlacement='bottom'\r\n                                                        tooltip='auto'\r\n                                                    />\r\n                                                </div>\r\n                                                <div id=\"resizeHeight-add\" onClick={() => {\r\n                                                    setCurrentHeight(values.resizeHeight < 99 ? values.resizeHeight + 1 : 100);\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        resizeHeight: prevState.resizeHeight < 99 ? prevState.resizeHeight + 1 : 100\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    +\r\n                                                </div>\r\n                                                <div id=\"resizeHeight-Original\" onClick={() => {\r\n                                                    setCurrentHeight(100);\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        resizeHeight: 100\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    <BootstrapIcon type={43} />\r\n                                                </div>\r\n                                                <div id=\"resizeHeight-remove\" onClick={() => {\r\n                                                    setCurrentHeight(values.resizeHeight > 6 ? values.resizeHeight - 1 : 5);\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        resizeHeight: prevState.resizeHeight > 6 ? prevState.resizeHeight - 1 : 5\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    -\r\n                                                    </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"sliderCoupleContainer\" + (activeTransformContainer === 4 ? '' : ' display-none')}>\r\n                                            <p>Mirror</p>\r\n                                            <div className=\"sliderCouple\">\r\n                                                <div id=\"mirrorY\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        mirrorY: prevState.mirrorY === 0 ? 1 : 0\r\n                                                    }))\r\n                                                }} className={\"valueButton\" + (values.mirrorY === 1 ? ' activeButton' : '')}>\r\n                                                    <BootstrapIcon type={45} />\r\n                                                </div>\r\n                                                <div id=\"mirrorX\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        mirrorX: prevState.mirrorX === 0 ? 1 : 0\r\n                                                    }))\r\n                                                }} className={\"valueButton\" + (values.mirrorX === 1 ? ' activeButton' : '')}>\r\n                                                    <BootstrapIcon type={44} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"sliderCoupleContainer\" + (activeTransformContainer === 5 ? '' : ' display-none')}>\r\n                                            <p>Image Settings</p>\r\n                                            <div className=\"sliderCouple\">\r\n\r\n                                                <div className=\"imageTypeCoupleContainer\">\r\n                                                    <div className=\"imageTypeCouple\">\r\n                                                        <div id=\"quality-add\" onClick={() => {\r\n                                                            setImageQuality((prevState) => (\r\n                                                                prevState < 0.9 ? prevState + 0.1 : 1\r\n                                                            ))\r\n                                                        }} className=\"valueButton\">\r\n                                                            +\r\n                                                        </div>\r\n                                                        <div id=\"quality-minmax\" onClick={() => {\r\n                                                            setImageQuality((prevState) => (\r\n                                                                prevState < 1 ? 1 : 0.1\r\n                                                            ))\r\n                                                        }} className=\"imageTypeButton\">\r\n                                                            <p>{imageQuality < 1 ? 'MAX' : 'MIN'}</p>\r\n                                                        </div>\r\n                                                        <div id=\"quality-remove\" onClick={() => {\r\n                                                            setImageQuality((prevState) => (\r\n                                                                prevState > 0.2 ? prevState - 0.1 : 0.1\r\n                                                            ))\r\n                                                        }} className=\"valueButton\">\r\n                                                            -\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <p>Quality: {Number((imageQuality).toFixed(1))}</p>\r\n                                                </div>\r\n                                                <div className=\"imageTypeCoupleContainer\">\r\n                                                    <div className=\"imageTypeCouple\">\r\n                                                        <div id=\"imagePNG\" onClick={() => { setIsPNG(true); }} className={\"imageTypeButton\" + (isPNG ? ' activeButton' : '')}>\r\n                                                            PNG\r\n                                                    </div>\r\n                                                        <div id=\"imageJPG\" onClick={() => { setIsPNG(false); }} className={\"imageTypeButton\" + (!isPNG ? ' activeButton' : '')}>\r\n                                                            JPG\r\n                                                    </div>\r\n                                                    </div>\r\n\r\n                                                    <p>Image Type</p>\r\n                                                </div>\r\n                                                <div className=\"imageTypeCoupleContainer\">\r\n                                                    <div className=\"imageTypeCouple\">\r\n\r\n                                                        <div id=\"imageOrigin\" onClick={() => { setPostOriginal(true); }} className={\"imageTypeButton\" + (postOriginal ? ' activeButton' : '')}>\r\n                                                            Original\r\n                                                    </div>\r\n                                                        <div id=\"imageEdit\" onClick={() => { setPostOriginal(false); }} className={\"imageTypeButton\" + (!postOriginal ? ' activeButton' : '')}>\r\n                                                            Edited\r\n                                                    </div>\r\n                                                    </div>\r\n\r\n                                                    <p>Post Image</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 editorContaier\">\r\n                                        <div className=\"buttonRow\">\r\n                                            <div id=\"toggle-original\" onClick={() => { setActiveTransformContainer(activeTransformContainer === 0 ? -1 : 0) }} className={\"editorButton\" + (activeTransformContainer === 0 ? ' activeButton' : '')}><div className=\"editorButtonInfoTop infoLeft\">Show Original</div><BootstrapIcon type={22} /></div>\r\n                                            <div id=\"crop\" onClick={() => { setActiveTransformContainer(activeTransformContainer === 1 ? -1 : 1) }} className={\"editorButton\" + (activeTransformContainer === 1 ? ' activeButton' : '')}><div className=\"editorButtonInfoTop\">Crop</div><BootstrapIcon type={35} /></div>\r\n                                            <div id=\"rotate\" onClick={() => { setActiveTransformContainer(activeTransformContainer === 2 ? -1 : 2) }} className={\"editorButton\" + (activeTransformContainer === 2 ? ' activeButton' : '')}><div className=\"editorButtonInfoTop\">Rotate</div><BootstrapIcon type={38} /></div>\r\n                                            <div id=\"resize\" onClick={() => { setActiveTransformContainer(activeTransformContainer === 3 ? -1 : 3) }} className={\"editorButton\" + (activeTransformContainer === 3 ? ' activeButton' : '')}><div className=\"editorButtonInfoTop\">Resize</div><BootstrapIcon type={41} /></div>\r\n                                            <div id=\"mirror\" onClick={() => { setActiveTransformContainer(activeTransformContainer === 4 ? -1 : 4) }} className={\"editorButton\" + (activeTransformContainer === 4 ? ' activeButton' : '')}><div className=\"editorButtonInfoTop\">Mirror</div><BootstrapIcon type={44} /></div>\r\n                                            <div id=\"imageSettings\" onClick={() => { setActiveTransformContainer(activeTransformContainer === 5 ? -1 : 5) }} className={\"editorButton\" + (activeTransformContainer === 5 ? ' activeButton' : '')}><div className=\"editorButtonInfoTop\">Settings</div><BootstrapIcon type={51} /></div>\r\n                                            <div id=\"render\" className={\"editorButton\" + (!renderPaused ? ' activeButton' : '')} onClick={() => { setRenderPaused(!renderPaused) }}><div className=\"editorButtonInfoTop\">{!renderPaused ? 'Render: ON' : 'Render: OFF'}</div><BootstrapIcon type={!renderPaused ? 56 : 57} /></div>\r\n                                            <div id=\"download\" className=\"editorButton\" onClick={\r\n                                                () => {\r\n                                                    // Get ext\r\n                                                    const fileExtension = fileName.slice(-4);\r\n\r\n                                                    // Init new filename\r\n                                                    let newFilename;\r\n\r\n                                                    // Check image type\r\n                                                    if (fileExtension === \".jpg\" || fileExtension === \".png\" || fileExtension === \".gif\") {\r\n                                                        // new filename\r\n                                                        newFilename = fileName.substring(0, fileName.length - 4) + \"-edited.\" + (isPNG ? 'png' : 'jpg');\r\n                                                    }\r\n\r\n                                                    // Call download\r\n                                                    canvas = document.getElementById('canvas');\r\n                                                    download(canvas, newFilename);\r\n                                                }\r\n                                            }><div className=\"editorButtonInfoTop\">Download</div><BootstrapIcon type={54} /></div>\r\n                                            <div id=\"reset\" className=\"editorButton\" onClick={() => { setPreviousPreset('initial'); setCurrentPreset(''); setCurrentCrop({ ...cropReset }); setValues({ ...resetValues }); setRenderPaused(false); setCommandStack([]); setRedoStack([]); }}><div className=\"editorButtonInfoTop infoRight\">Reset</div><BootstrapIcon type={55} /></div>\r\n                                        </div>\r\n                                        <div id=\"canvasScreen\" className={\"originalImageContainer \" + (expand ? (resizeClass + ' ' + resizeClassCropped) : '')}>\r\n                                            <canvas data-caman-hidpi-disabled=\"true\" id=\"presetCopy\"></canvas>\r\n                                            <img src={previewSource ? previewSource : ''} alt=\"selected file\" className={\"originalImage\" + (activeTransformContainer === 0 ? '' : ' invisible')} />\r\n                                            <canvas data-caman-hidpi-disabled=\"true\" id=\"canvasCopy\"></canvas>\r\n                                            <ReactCrop id=\"reactCropID\" className={(activeTransformContainer === 1) ? '' : 'invisible'} src={previewSource} crop={currentCrop} onChange={(crop, percentCrop) => { setCurrentCrop(percentCrop) }} onComplete={() => { cropCanvas(); addCropCommand(); }} />\r\n                                            <canvas id=\"canvasCover\" data-caman-hidpi-disabled=\"true\" className={\"blackCover \" + ((activeTransformContainer !== 1) ? '' : 'invisible')}></canvas>\r\n                                            <canvas id=\"canvas\" data-caman-hidpi-disabled=\"true\" className={((activeTransformContainer !== 0 && activeTransformContainer !== 1) ? '' : 'invisible')}></canvas>\r\n                                        </div>\r\n                                        <div className=\"buttonRow\">\r\n                                            <div className={\"editorButton\" + (activeFilterContainer === 0 ? ' activeButton' : '')} onClick={() => { setActiveFilterContainer(activeFilterContainer === 0 ? -1 : 0) }}><div className=\"editorButtonInfoBottom infoLeft\">Preset Filter</div><BootstrapIcon type={50} /></div>\r\n                                            <div className={\"editorButton\" + (activeFilterContainer === 1 ? ' activeButton' : '')} onClick={() => { setActiveFilterContainer(activeFilterContainer === 1 ? -1 : 1) }}><div className=\"editorButtonInfoBottom\">Light Level</div><BootstrapIcon type={37} /></div>\r\n                                            <div className={\"editorButton\" + (activeFilterContainer === 2 ? ' activeButton' : '')} onClick={() => { setActiveFilterContainer(activeFilterContainer === 2 ? -1 : 2) }}><div className=\"editorButtonInfoBottom\">Colors</div><BootstrapIcon type={46} /></div>\r\n                                            <div className={\"editorButton\" + (activeFilterContainer === 3 ? ' activeButton' : '')} onClick={() => { setActiveFilterContainer(activeFilterContainer === 3 ? -1 : 3) }}><div className=\"editorButtonInfoBottom\">RGB</div><BootstrapIcon type={47} /></div>\r\n                                            <div className={\"editorButton\" + (activeFilterContainer === 4 ? ' activeButton' : '')} onClick={() => { setActiveFilterContainer(activeFilterContainer === 4 ? -1 : 4) }}><div className=\"editorButtonInfoBottom\">Colorize</div><BootstrapIcon type={48} /></div>\r\n                                            <div className={\"editorButton\" + (activeFilterContainer === 5 ? ' activeButton' : '')} onClick={() => { setActiveFilterContainer(activeFilterContainer === 5 ? -1 : 5) }}><div className=\"editorButtonInfoBottom\">Noise</div><BootstrapIcon type={49} /></div>\r\n                                            <div className={\"editorButton\" + (activeFilterContainer === 6 ? ' activeButton' : '')} onClick={() => { setActiveFilterContainer(activeFilterContainer === 6 ? -1 : 6) }}><div className=\"editorButtonInfoBottom\">Vignette</div><BootstrapIcon type={72} /></div>\r\n                                            <div className=\"editorButton\" onClick={undoCommand}><BootstrapIcon type={52} /><div className=\"editorButtonInfoBottom\">Undo</div></div>\r\n                                            <div className=\"editorButton\" onClick={redoCommand}><BootstrapIcon type={53} /><div className=\"editorButtonInfoBottom infoRight\">Redo</div></div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"activeFilterContainer\">\r\n                                        <div className=\"renderStatusContainer\">\r\n                                            {isRendering || isLoading ?\r\n                                                <div className=\"lds-spinner-small\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                                                : null\r\n                                            }\r\n                                        </div>\r\n                                        <div className={\"buttonCoupleContainer presetContainer\" + (activeFilterContainer === 0 ? '' : ' display-none')}>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === '') ? 'activePreset' : '')} onClick={() => { setCurrentPreset('') }}>\r\n                                                <img src={TEMPLATE} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>None</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'vintage') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'vintage' ? '' : 'vintage') }}>\r\n                                                <img src={VINTAGE} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Vintage</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'lomo') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'lomo' ? '' : 'lomo') }}>\r\n                                                <img src={LOMO} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Lomo</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'thea') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'thea' ? '' : 'thea') }}>\r\n                                                <img src={THEA} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Thea</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'clarity') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'clarity' ? '' : 'clarity') }}>\r\n                                                <img src={CLARITY} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Clarity</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'sinCity') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'sinCity' ? '' : 'sinCity') }}>\r\n                                                <img src={SINCITY} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Sin City</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'sunrise') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'sunrise' ? '' : 'sunrise') }}>\r\n                                                <img src={SUNRISE} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Sunrise</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'crossProcess') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'crossProcess' ? '' : 'crossProcess') }}>\r\n                                                <img src={CROSSPROCESS} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Process</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'orangePeel') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'orangePeel' ? '' : 'orangePeel') }}>\r\n                                                <img src={ORANGEPEEL} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>RedPeel</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'love') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'love' ? '' : 'love') }}>\r\n                                                <img src={LOVE} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Love</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'grungy') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'grungy' ? '' : 'grungy') }}>\r\n                                                <img src={GRUNGY} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Grungy</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'jarques') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'jarques' ? '' : 'jarques') }}>\r\n                                                <img src={JARQUES} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Jarques</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'pinhole') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'pinhole' ? '' : 'pinhole') }}>\r\n                                                <img src={PINHOLE} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Pinhole</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'oldBoot') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'oldBoot' ? '' : 'oldBoot') }}>\r\n                                                <img src={OLDBOOT} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>OldBoot</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'glowingSun') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'glowingSun' ? '' : 'glowingSun') }}>\r\n                                                <img src={GLOWINGSUN} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Glow</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'hazyDays') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'hazyDays' ? '' : 'hazyDays') }}>\r\n                                                <img src={HAZYDAYS} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>HazyDays</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'herMajesty') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'herMajesty' ? '' : 'herMajesty') }}>\r\n                                                <img src={HERMAJESTY} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Majestic</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'nostalgia') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'nostalgia' ? '' : 'nostalgia') }}>\r\n                                                <img src={NOSTALGIA} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Nostalgia</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'hemingway') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'hemingway' ? '' : 'hemingway') }}>\r\n                                                <img src={HEMINGWAY} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Bliss</p>\r\n                                            </div>\r\n                                            <div className={\"presetButton \" + ((values.presetFilter === 'concentrate') ? 'activePreset' : '')} onClick={() => { setCurrentPreset(currentPreset === 'concentrate' ? '' : 'concentrate') }}>\r\n                                                <img src={CONCENTRATE} alt='preset' className=\"presetTemplate\" />\r\n                                                <p>Focus</p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"buttonCoupleContainer\" + (activeFilterContainer === 1 ? '' : ' display-none')}>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={23} />\r\n                                                <div id=\"brightness-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        brightness: (prevState.brightness < 95) ? (prevState.brightness + 5) : 100\r\n                                                    }));\r\n                                                }}>+</div>\r\n                                                <div id=\"brightness-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        brightness: (prevState.brightness > -95) ? (prevState.brightness - 5) : -100\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={24} />\r\n                                                <div id=\"contrast-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        contrast: (prevState.contrast < 95) ? (prevState.contrast + 5) : 100\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"contrast-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        contrast: (prevState.contrast > -95) ? (prevState.contrast - 5) : -100\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={25} />\r\n                                                <div id=\"exposure-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        exposure: (prevState.exposure < 95) ? (prevState.exposure + 5) : 100\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"exposure-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        exposure: (prevState.exposure > -95) ? (prevState.exposure - 5) : -100\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={36} />\r\n                                                <div id=\"gamma-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        gamma: (prevState.gamma < 4.9) ? (parseFloat((prevState.gamma + 0.1).toFixed(1))) : 5\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"gamma-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        gamma: (prevState.gamma > 0.1) ? (parseFloat((prevState.gamma - 0.1).toFixed(1))) : 0\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={73} />\r\n                                                <div id=\"opacity-add\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        opacity: prevState.opacity < 0.95 ? (parseFloat((prevState.opacity + 0.05).toFixed(2))) : 1\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    +\r\n                                                </div>\r\n                                                <div id=\"opacity-remove\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        opacity: prevState.opacity > 0.05 ? (parseFloat((prevState.opacity - 0.05).toFixed(2))) : 0\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    -\r\n                                                    </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div className={\"buttonCoupleContainer\" + (activeFilterContainer === 2 ? '' : ' display-none')}>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={26} />\r\n                                                <div id=\"saturation-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        saturation: (prevState.saturation < 95) ? (prevState.saturation + 5) : 100\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"saturation-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        saturation: (prevState.saturation > -95) ? (prevState.saturation - 5) : -100\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={27} />\r\n                                                <div id=\"vibrance-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        vibrance: (prevState.vibrance < 95) ? (prevState.vibrance + 5) : 100\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"vibrance-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        vibrance: (prevState.vibrance > -95) ? (prevState.vibrance - 5) : -100\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={34} />\r\n                                                <div id=\"hue-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        hue: (prevState.hue < 95) ? (prevState.hue + 5) : 100\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"hue-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        hue: (prevState.hue > 5) ? (prevState.hue - 5) : 0\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={59} />\r\n                                                <div id=\"invert-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        invert: true\r\n                                                    }))\r\n                                                }}><BootstrapIcon type={30} /></div>\r\n                                                <div id=\"invert-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        invert: false\r\n                                                    }))\r\n                                                }}><BootstrapIcon type={31} /></div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={60} />\r\n                                                <div id=\"sepia-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        sepia: (prevState.sepia < 95) ? (prevState.sepia + 5) : 100\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"sepia-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        sepia: (prevState.sepia > 5) ? (prevState.sepia - 5) : 0\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={33} />\r\n                                                <div id=\"clip-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        clip: (prevState.clip < 95) ? (prevState.clip + 5) : 100\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"clip-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        clip: (prevState.clip > 5) ? (prevState.clip - 5) : 0\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"buttonCoupleContainer\" + (activeFilterContainer === 3 ? '' : ' display-none')}>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={29} fill='red' />\r\n                                                <div id=\"channelR-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        channelR: (prevState.channelR < 95) ? (prevState.channelR + 5) : 100\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"channelR-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        channelR: (prevState.channelR > -95) ? (prevState.channelR - 5) : -100\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={29} fill='green' />\r\n                                                <div id=\"channelG-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        channelG: (prevState.channelG < 95) ? (prevState.channelG + 5) : 100\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"channelG-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        channelG: (prevState.channelG > -95) ? (prevState.channelG - 5) : -100\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={29} fill='blue' />\r\n                                                <div id=\"channelB-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        channelB: (prevState.channelB < 95) ? (prevState.channelB + 5) : 100\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"channelB-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        channelB: (prevState.channelB > -95) ? (prevState.channelB - 5) : -100\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={29} fill='grey' />\r\n                                                <div id=\"greyscale-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        greyscale: true\r\n                                                    }))\r\n                                                }}><BootstrapIcon type={30} /></div>\r\n                                                <div id=\"greyscale-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        greyscale: false\r\n                                                    }))\r\n                                                }}><BootstrapIcon type={31} /></div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"sliderCoupleContainer\" + (activeFilterContainer === 4 ? '' : ' display-none')}>\r\n                                            <div className=\"sliderCouple\">\r\n                                                <div className=\"sliderFlexWrap\">\r\n                                                    <SliderPicker color={currentColor} onChange={(color) => { setCurrentColor(color.hex) }} onChangeComplete={(color) => { setEndColor(color.hex) }} />\r\n                                                </div>\r\n                                                <div id=\"colorizeStrength-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        colorizeStrength: (prevState.colorizeStrength < 95) ? (prevState.colorizeStrength + 5) : 100\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"colorizeStrength-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        colorizeStrength: (prevState.colorizeStrength > 5) ? (prevState.colorizeStrength - 5) : 0\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"buttonCoupleContainer\" + (activeFilterContainer === 5 ? '' : ' display-none')}>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={61} />\r\n                                                <div id=\"noise-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        noise: (prevState.noise < 75) ? (prevState.noise + 5) : 80\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"noise-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        noise: (prevState.noise > 5) ? (prevState.noise - 5) : 0\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={68} />\r\n                                                <div id=\"sharpen-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        sharpen: (prevState.sharpen < 115) ? (prevState.sharpen + 5) : 120\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"sharpen-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        sharpen: (prevState.sharpen > 5) ? (prevState.sharpen - 5) : 0\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={32} />\r\n                                                <div id=\"stackBlur-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        stackBlur: (prevState.stackBlur < 19) ? (prevState.stackBlur + 1) : 20\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"stackBlur-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        stackBlur: (prevState.stackBlur > 1) ? (prevState.stackBlur - 1) : 0\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <BootstrapIcon type={58} />\r\n                                                <div id=\"radialBlur-add\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        radialBlur: (prevState.radialBlur < 7) ? (prevState.radialBlur + 1) : 8\r\n                                                    }))\r\n                                                }}>+</div>\r\n                                                <div id=\"radialBlur-remove\" className=\"valueButton\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        radialBlur: (prevState.radialBlur > 1) ? (prevState.radialBlur - 1) : 0\r\n                                                    }))\r\n                                                }}>-</div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <div className=\"buttonCouple\">\r\n                                                    <BootstrapIcon type={67} />\r\n                                                    <div id=\"dither-add\" className=\"valueButton\" onClick={() => {\r\n                                                        setValues((prevState) => ({\r\n                                                            ...prevState,\r\n                                                            dither: true\r\n                                                        }))\r\n                                                    }}><BootstrapIcon type={30} /></div>\r\n                                                    <div id=\"dither-remove\" className=\"valueButton\" onClick={() => {\r\n                                                        setValues((prevState) => ({\r\n                                                            ...prevState,\r\n                                                            dither: false\r\n                                                        }))\r\n                                                    }}><BootstrapIcon type={31} /></div>\r\n                                                </div>\r\n                                                <div className=\"buttonCouple\">\r\n                                                    <BootstrapIcon type={69} text={\r\n                                                        values.ditherAlgo === 1 ? 'j' :\r\n                                                            values.ditherAlgo === 2 ? 'S' :\r\n                                                                values.ditherAlgo === 3 ? 'a' :\r\n                                                                    values.ditherAlgo === 4 ? 'b' :\r\n                                                                        values.ditherAlgo === 5 ? 'si' :\r\n                                                                            values.ditherAlgo === 6 ? 's2' :\r\n                                                                                values.ditherAlgo === 7 ? 'sl' :\r\n                                                                                    'f'} />\r\n                                                    <div id=\"ditherAlgo-add\" className=\"valueButton\" onClick={() => {\r\n                                                        setValues((prevState) => ({\r\n                                                            ...prevState,\r\n                                                            ditherAlgo: prevState.ditherAlgo < 7 ? prevState.ditherAlgo + 1 : 0\r\n                                                        }))\r\n                                                    }}><BootstrapIcon type={70} /></div>\r\n                                                    <div id=\"ditherAlgo-remove\" className=\"valueButton\" onClick={() => {\r\n                                                        setValues((prevState) => ({\r\n                                                            ...prevState,\r\n                                                            ditherAlgo: prevState.ditherAlgo > 0 ? prevState.ditherAlgo - 1 : 7\r\n                                                        }))\r\n                                                    }}><BootstrapIcon type={71} /></div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"buttonCouple\">\r\n                                                <div className=\"buttonCouple\">\r\n                                                    <BootstrapIcon type={62} />\r\n                                                    <div id=\"motionBlurLayers-add\" className=\"valueButton\" onClick={() => {\r\n                                                        setValues((prevState) => ({\r\n                                                            ...prevState,\r\n                                                            motionBlurLayers: (prevState.motionBlurLayers < 5) ? (prevState.motionBlurLayers + 1) : 6\r\n                                                        }))\r\n                                                    }}>+</div>\r\n                                                    <div id=\"motionBlurLayers-remove\" className=\"valueButton\" onClick={() => {\r\n                                                        setValues((prevState) => ({\r\n                                                            ...prevState,\r\n                                                            motionBlurLayers: (prevState.motionBlurLayers > 1) ? (prevState.motionBlurLayers - 1) : 0\r\n                                                        }))\r\n                                                    }}>-</div>\r\n                                                </div>\r\n                                                <div className=\"buttonCouple\">\r\n                                                    <BootstrapIcon type={\r\n                                                        (values.motionBlurAngle === 45 || values.motionBlurAngle === 225) ? 64 :\r\n                                                            (values.motionBlurAngle === 90 || values.motionBlurAngle === 270) ? 63 :\r\n                                                                (values.motionBlurAngle === 135 || values.motionBlurAngle === 315) ? 66 :\r\n                                                                    65} />\r\n                                                    <div id=\"motionBlurAngle-add\" className=\"valueButton\" onClick={() => {\r\n                                                        setValues((prevState) => ({\r\n                                                            ...prevState,\r\n                                                            motionBlurAngle: ((prevState.motionBlurAngle % 45) !== 0) ? 0 : (prevState.motionBlurAngle + 45) % 360\r\n                                                        }))\r\n                                                    }}><BootstrapIcon type={70} /></div>\r\n                                                    <div id=\"motionBlurAngle-remove\" className=\"valueButton\" onClick={() => {\r\n                                                        setValues((prevState) => ({\r\n                                                            ...prevState,\r\n                                                            motionBlurAngle: ((prevState.motionBlurAngle % 45) !== 0) ? 0 : (prevState.motionBlurAngle - 45 + (prevState.motionBlurAngle < 45 ? 360 : 0)) % 360\r\n                                                        }))\r\n                                                    }}><BootstrapIcon type={71} /></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"sliderCoupleContainer\" + (activeFilterContainer === 6 ? '' : ' display-none')}>\r\n                                            <div className=\"sliderCouple\">\r\n                                                <div id=\"vignetteSize-add\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        vignetteSize: prevState.vignetteSize < 99 ? prevState.vignetteSize + 1 : 100\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    +\r\n                                                </div>\r\n                                                <p>V Size</p>\r\n                                                <div id=\"vignetteSize-remove\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        vignetteSize: prevState.vignetteSize > 1 ? prevState.vignetteSize - 1 : 0\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    -\r\n                                                    </div>\r\n                                                <div className=\"sliderFlexWrap Aspect\">\r\n\r\n                                                    <RangeSlider\r\n                                                        value={currentVignetteSize}\r\n                                                        onChange={(e) => { setCurrentVignetteSize(e.target.value) }}\r\n                                                        onAfterChange={\r\n                                                            (e) => {\r\n                                                                setValues((prevState) => ({\r\n                                                                    ...prevState,\r\n                                                                    vignetteSize: parseInt(e.target.value)\r\n                                                                }))\r\n                                                            }\r\n                                                        }\r\n                                                        min={0}\r\n                                                        max={100}\r\n                                                        step={1}\r\n                                                        className=\"resizeRange\"\r\n                                                        variant=\"light\"\r\n                                                        tooltipLabel={currentValue => `${currentValue}%`}\r\n                                                        tooltipPlacement='top'\r\n                                                        tooltip='auto'\r\n                                                    />\r\n                                                </div>\r\n\r\n                                                <div className=\"sliderFlexWrap Aspect\">\r\n\r\n                                                    <RangeSlider\r\n                                                        value={currentVignetteStrength}\r\n                                                        onChange={(e) => { setCurrentVignetteStrength(e.target.value) }}\r\n                                                        onAfterChange={\r\n                                                            (e) => {\r\n                                                                setValues((prevState) => ({\r\n                                                                    ...prevState,\r\n                                                                    vignetteStrength: parseInt(e.target.value)\r\n                                                                }))\r\n                                                            }\r\n                                                        }\r\n                                                        min={0}\r\n                                                        max={100}\r\n                                                        step={1}\r\n                                                        className=\"resizeRange\"\r\n                                                        variant=\"light\"\r\n                                                        tooltipLabel={currentValue => `${currentValue}%`}\r\n                                                        tooltipPlacement='bottom'\r\n                                                        tooltip='auto'\r\n                                                    />\r\n                                                </div>\r\n                                                <div id=\"vignetteStrength-add\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        vignetteStrength: prevState.vignetteStrength < 99 ? prevState.vignetteStrength + 1 : 100\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    +\r\n                                                </div>\r\n                                                <p>Effect</p>\r\n                                                <div id=\"vignetteStrength-remove\" onClick={() => {\r\n                                                    setValues((prevState) => ({\r\n                                                        ...prevState,\r\n                                                        vignetteStrength: prevState.vignetteStrength > 1 ? prevState.vignetteStrength - 1 : 0\r\n                                                    }))\r\n                                                }} className=\"valueButton\">\r\n                                                    -\r\n                                                    </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n                                <hr className=\"round\" />\r\n                                <div className={userVerified ? '' : 'display-none'}>\r\n                                    <Form.Group controlId=\"newPostDescription\">\r\n                                        <Form.Label>Description</Form.Label>\r\n                                        <Form.Control autoComplete=\"off\" as=\"textarea\" rows={5} onChange={(e) => { setDescription(checkText(e.target.value)); document.getElementById('newPostDescription').value = checkText(e.target.value); }} />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"postButtonHolder\">\r\n                                        <button type=\"submit\" onClick={postFile} name=\"button\" className=\"genericButton\">Post</button>\r\n                                    </Form.Group>\r\n                                    <DropdownButton className=\"changePostView\" title={postView}>\r\n                                        <Dropdown.Item onSelect={() => { setPostView('Public') }}>Public</Dropdown.Item>\r\n                                        <Dropdown.Item onSelect={() => { setPostView('Friends') }} >Friends</Dropdown.Item>\r\n                                        <Dropdown.Item onSelect={() => { setPostView('Private') }} >Private</Dropdown.Item>\r\n                                    </DropdownButton>\r\n                                </div>\r\n                            </Form>\r\n                            <hr className=\"round\" />\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"blog-post\">\r\n                            <h5 className=\"w\">Link Vizije</h5>\r\n                            <p className=\"blog-post-meta\">Zadnje ažurirano 8. studenog 2020. <strong> <a className=\"alink\" href=\"https://docs.google.com/document/d/141DHijMdyPfeffnDDo_hYwJRKfGQT5NC6UDfMsEDl3Y/edit?usp=sharing\" target=\"_blank\" rel=\"noreferrer\">Vizija</a> </strong></p>\r\n                            <a href=\"https://github.com/MarkoRezic/RTFotoEditor\" target=\"_blank\">\r\n                                <span className=\"githubContainer\">\r\n                                    <img alt='' src={GITHUB} className=\"github\" />\r\n                                    <img alt='' src={GITHUBLOGO} className=\"githubLogo\" />\r\n                                </span>\r\n                            </a>\r\n                            <a href=\"http://camanjs.com/\" target=\"_blank\">\r\n                                <span className=\"githubContainer\">\r\n                                    <img alt='' src={CAMANJS} className=\"github\" />\r\n                                    <img alt='' src={CAMERA} className=\"githubLogo\" />\r\n                                </span>\r\n                            </a>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Editor;","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Posts.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Postavke.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\ConfirmPanel.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\components\\Post.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\svg icons\\BootstrapIcon.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\views\\UserView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\views\\SuperAdminView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\views\\AdminView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor\\client\\src\\views\\GuestView.js",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"206","replacedBy":"210"},{"ruleId":"208","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":153,"column":82,"nodeType":"214","endLine":153,"endColumn":97},{"ruleId":"212","severity":1,"message":"213","line":2449,"column":82,"nodeType":"214","endLine":2449,"endColumn":97},{"ruleId":"212","severity":1,"message":"213","line":2455,"column":59,"nodeType":"214","endLine":2455,"endColumn":74},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],["215"],["216"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]